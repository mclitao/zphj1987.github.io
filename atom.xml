<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[zphj1987'Blog]]></title>
  <subtitle><![CDATA[现在所学，终有所用]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-09-22T16:15:49.600Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[zphj1987]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[ceph客户端服务端属性匹配关系]]></title>
    <link href="http://yoursite.com/2015/09/18/ceph%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%B1%9E%E6%80%A7%E5%8C%B9%E9%85%8D%E5%85%B3%E7%B3%BB/"/>
    <id>http://yoursite.com/2015/09/18/ceph客户端服务端属性匹配关系/</id>
    <published>2015-09-18T03:24:08.000Z</published>
    <updated>2015-09-22T16:15:49.600Z</updated>
    <content type="html"><![CDATA[<p>ceph的server是定期会发布版本，而它的客户端是放到linux 内核当中的，一些属性的支持是依赖于内核版本的，这样就存在一些问题，一些功能后端支持，而客户端旧了；还有可能是客户端用的很新的内核，而后端比较旧不支持，所以查看了下内核中的 <code>features</code> 文件，可以看到这个对应关系，总结了下就是下面的列表</p>
<p>注意表中：</p>
<ul>
<li><strong>S</strong>=SUPPORTED_DEFAULT     代表客户端支持这个属性</li>
<li><strong>R</strong>=REQUIRED_DEFAULT      代表需要服务端支持这个属性</li>
</ul>
<p><img src="http://7xi6lo.com1.z0.glb.clouddn.com/属性匹配的问题.png" alt=""></p>
<p><code>missing 2040000</code> 意思是 <code>CEPH_FEATURE_CRUSH_TUNABLES (40000)</code> 和 <code>CEPH_FEATURE_CRUSH_TUNABLES2 (2000000)</code> 不被当前客户端支持，一般要么关闭新的server端的这个属性，或者升级到支持的版本的内核.</p>
<p>内核代码查看地址：<a href="http://lxr.free-electrons.com/source/include/linux/ceph/ceph_features.h" target="_blank" rel="external">http://lxr.free-electrons.com/source/include/linux/ceph/ceph_features.h</a></p>
<p>写于：2015年09月18日夜</p>
<p><strong>Power by zphj1987</strong></p>
<p><strong>QQ:199383004</strong></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ceph的server是定期会发布版本，而它的客户端是放到linux 内核当中的，一些属性的支持是依赖于内核版本的，这样就存在一些问题，一些功能后端支持，而客户端旧了；还有可能是客户端用的很新的内核，而后端比较旧不支持，所以查看了下内核中的 <code>features</]]>
    </summary>
    
      <category term="ceph" scheme="http://yoursite.com/tags/ceph/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[dm-crypt加密磁盘]]></title>
    <link href="http://yoursite.com/2015/05/25/dm-crypt%E5%8A%A0%E5%AF%86%E7%A3%81%E7%9B%98/"/>
    <id>http://yoursite.com/2015/05/25/dm-crypt加密磁盘/</id>
    <published>2015-05-25T06:07:58.000Z</published>
    <updated>2015-05-25T06:14:22.406Z</updated>
    <content type="html"><![CDATA[<h3 id="dm-cry加密方式密码与文件">dm-cry加密方式密码与文件</h3><p>与其它创建加密文件系统的方法相比，dm-crypt系统有着无可比拟的优越性：它的速度更快，易用性更强。除此之外，它的适用面也很广，能够运行在各种块设备上，即使这些设备使用了RAID和 LVM也毫无障碍。</p>
<p>如果看到类似下面的输出，说明AES模块已经加载了。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">cat /proc/crypto&#10;&#10;name         : aes&#10;driver       : aes-generic&#10;module       : kernel&#10;priority     : 100&#10;refcnt       : 3&#10;selftest     : passed&#10;type         : cipher&#10;blocksize    : 16&#10;min keysize  : 16&#10;max keysize  : 32</span><br></pre></td></tr></table></figure></p>
<p>否则可以用modprobe命令来手工加载AES模块。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe aes</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>检查dmsetup软件包是否已经建立了设备映像程序，用如下命令：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls <span class="operator">-l</span> /dev/mapper/control</span><br></pre></td></tr></table></figure></p>
<p>检查dm-crypt内核模块是否加载<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node1 mnt]<span class="comment"># dmsetup targets</span></span><br><span class="line">crypt            v1.<span class="number">13.0</span></span><br><span class="line">mirror           v1.<span class="number">13.2</span></span><br><span class="line">striped          v1.<span class="number">5.1</span></span><br><span class="line">linear           v1.<span class="number">2.1</span></span><br><span class="line">error            v1.<span class="number">2.0</span></span><br></pre></td></tr></table></figure></p>
<p>这说明系统已经为加密设备做好了准备。如果没有输出，可以用如下命令来加载dm-crypt模块。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe dm-crypt</span><br></pre></td></tr></table></figure></p>
<p>建立加密设备</p>
<p>这里用 fdisk命令来创建需要加密的磁盘，怎么创建磁盘这里不再冗述。假设这里创建好的磁盘分区是/dev/sdb1<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup -y create sdb_cry /dev/sdb1</span><br></pre></td></tr></table></figure></p>
<p>sdb_cry是逻辑卷的名称。输入上面命令后，还要输入2次密码，这个密码就是磁盘加密的密码。请牢记！<br>创建好后，用下面命令检查所建立的逻辑卷：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># dmsetup ls</span></span><br><span class="line">sdb_cry	(<span class="number">252</span>:<span class="number">0</span>)</span><br></pre></td></tr></table></figure></p>
<p>device-mapper会把它的虚拟设备装载到/dev/mapper下面，所以，你的虚拟块设备应该是/dev/mapper/sdb_cry，尽管用起来和其他块设备没什么不同，实际上它却是经过透明加密的。</p>
<p>创建文件系统：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># mkfs.xfs /dev/mapper/sdb_cry -f</span></span><br></pre></td></tr></table></figure></p>
<p>装载加密磁盘：<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># mount /dev/mapper/sdb_cry /mnt</span></span><br><span class="line"></span><br><span class="line">[root@node1 ~]<span class="comment"># cp /etc/networks /mnt/</span></span><br><span class="line">[root@node1 ~]<span class="comment"># cat /mnt/networks </span></span><br><span class="line">default <span class="number">0.0</span>.<span class="number">0.0</span></span><br><span class="line">loopback <span class="number">127.0</span>.<span class="number">0.0</span></span><br><span class="line">link-local <span class="number">169.254</span>.<span class="number">0.0</span></span><br></pre></td></tr></table></figure></p>
<p>卸载加密设备<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#cryptsetup remove sdb_cry</span></span><br></pre></td></tr></table></figure></p>
<p>重新加载加密设备<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@node1 ~]<span class="comment"># cryptsetup create sdb_cry /dev/sdb1</span></span><br></pre></td></tr></table></figure></p>
<p>这里重新挂载会要求输入密码，密码输入不正确，设备会映射过去，但是找不到文件系统，是无法看到数据的</p>
<p>重新挂载<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mount /dev/mapper/sdb_cry /mnt</span><br></pre></td></tr></table></figure></p>
<p>注意 cryptsetup -y create sdb_cry /dev/sdb1 会重新为磁盘设置新的密码，只要不对磁盘进行格式化，即使设置了新的密码，同样是看不到数据的，设置了新的密码后，只要不格式化，还是能够使用旧的密码来对磁盘进行挂载的</p>
<p>以上为采用密码加密磁盘的方式</p>
<hr>
<p>使用luks方式的加密<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup -y -v luksFormat /dev/sdb1</span><br></pre></td></tr></table></figure></p>
<p>输入大写的YES，小写不行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup isLuks /dev/sdb1</span><br></pre></td></tr></table></figure></p>
<p>判断设备<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup luksOpen /dev/sdb1 sdb1_luks</span><br></pre></td></tr></table></figure></p>
<p>映射设备到/dev/mapper/下面</p>
<p>卸载<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup remove sdb1_luks</span><br></pre></td></tr></table></figure></p>
<p>再次加载<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup isLuks /dev/sdb1</span><br></pre></td></tr></table></figure></p>
<hr>
<p>采用文件方式的加密</p>
<p>创建加密设备，并指定的文件<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup --key-file /etc/zbkc/key/UUID --key-size <span class="number">256</span> create sdb1_cry /dev/sdb1</span><br></pre></td></tr></table></figure></p>
<p>使用上面的命令后会在/dev/mapper/下生成对应设备</p>
<p>然后格式化使用设备即可</p>
<p>卸载设备<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup remove sdb1_cry</span><br></pre></td></tr></table></figure></p>
<p>需要再次使用就<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cryptsetup --key-file /etc/zbkc/key/UUID --key-size <span class="number">256</span> create sdb1_cry /dev/sdb1</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="dm-cry加密方式密码与文件">dm-cry加密方式密码与文件</h3><p>与其它创建加密文件系统的方法相比，dm-crypt系统有着无可比拟的优越性：它的速度更快，易用性更强。除此之外，它的适用面也很广，能够运行在各种块设备上，即使这些设备使用了RAID和 LVM也毫无障碍。</p>
<p>如果看到类似下面的输出，说明AES模块已经加载了。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">cat /proc/crypto&#10;&#10;name         : aes&#10;driver       : aes-generic&#10;module       : kernel&#10;priority     : 100&#10;refcnt       : 3&#10;selftest     : passed&#10;type         : cipher&#10;blocksize    : 16&#10;min keysize  : 16&#10;max keysize  : 32</span><br></pre></td></tr></table></figure></p>
<p>否则可以用modprobe命令来手工加载AES模块。<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modprobe aes</span><br></pre></td></tr></table></figure></p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[history命令的优化]]></title>
    <link href="http://yoursite.com/2015/03/31/history%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BC%98%E5%8C%96/"/>
    <id>http://yoursite.com/2015/03/31/history命令的优化/</id>
    <published>2015-03-31T08:53:28.000Z</published>
    <updated>2015-03-31T08:54:52.846Z</updated>
    <content type="html"><![CDATA[<p>现在在项目中遇到这个情况比较多，在执行了一系列的命令后，想去翻历史记录的时候，翻不到历史记录，不同终端的命令，没有汇总，也不清楚那条命令是什么时候执行的，所以需要对默认的命令进行下面两个优化：</p>
<ul>
<li>让历史记录里面带有时间</li>
<li>让所有终端命令都记录到history当中去</li>
</ul>
<h3 id="添加日期">添加日期</h3><p>在 /etc/bashrc 末尾添加：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">HISTTIMEFORMAT=&#34;%F %T &#34;&#10;export HISTTIMEFORMAT</span><br></pre></td></tr></table></figure></p>
<p>然后执行:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure></p>
<p>新开终端，history就已经带有日期</p>
<h3 id="汇总命令，并且不同的终端可以通过上翻查询到命令">汇总命令，并且不同的终端可以通过上翻查询到命令</h3><p>在 /etc/bashrc 末尾添加：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line"># Avoid duplicates&#10;export HISTCONTROL=ignoredups:erasedups&#10;# When the shell exits, append to the history file instead of overwriting it&#10;shopt -s histappend&#10;&#10;# After each command, append to the history file and reread it&#10;export PROMPT_COMMAND=&#34;$&#123;PROMPT_COMMAND:+$PROMPT_COMMAND$&#39;\n&#39;&#125;history -a; history -c; history -r&#34;</span><br></pre></td></tr></table></figure></p>
<p>然后执行:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/bashrc</span><br></pre></td></tr></table></figure></p>
<h3 id="调整大小，增加到10000条">调整大小，增加到10000条</h3><p>在 /etc/bashrc 末尾添加：<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">export HISTSIZE=10000</span><br></pre></td></tr></table></figure></p>
<p>然后执行:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">source /etc/bashrc</span><br></pre></td></tr></table></figure></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>现在在项目中遇到这个情况比较多，在执行了一系列的命令后，想去翻历史记录的时候，翻不到历史记录，不同终端的命令，没有汇总，也不清楚那条命令是什么时候执行的，所以需要对默认的命令进行下面两个优化：</p>
<ul>
<li>让历史记录里面带有时间</li>
<li>让所有终端命]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[fq教程]]></title>
    <link href="http://yoursite.com/2015/03/24/fq%E6%95%99%E7%A8%8B/"/>
    <id>http://yoursite.com/2015/03/24/fq教程/</id>
    <published>2015-03-24T05:30:23.000Z</published>
    <updated>2015-03-26T06:04:51.550Z</updated>
    <content type="html"><![CDATA[<h3 id="手机作为翻墙路由器的方式">手机作为翻墙路由器的方式</h3><p>首先介绍的是手机上的翻墙软件，这个只能走http协议，不能走https协议，在手机上使用很方便，能够方便的访问各种网站，但是作为其他设备的时候，就只能提供http的，那么像google需要用到https的时候，其他设备就出现无法访问情况</p>
<p>软件下载地址（已经存放到百度盘）<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#38142;&#25509;&#65306;http://pan.baidu.com/s/1eQs35a6 &#23494;&#30721;&#65306;3u19</span><br></pre></td></tr></table></figure></p>
<p><img src="http://i.imgur.com/HeUIJ6e.png" alt=""></p>
<p>点击软件后出现下面的界面就可以访问了，这个是全局的代理，所以可以直接使用手机访问外网了，可以开启更多功能</p>
<a id="more"></a>
<p><img src="http://i.imgur.com/184ajLN.png" alt=""></p>
<p>开启http代理，点击那个按钮开启</p>
<p><img src="http://i.imgur.com/0Jmj1Pb.png" alt=""></p>
<p>可以看到http代理的端口为2516</p>
<h3 id="windows">windows</h3><p>设置windows的连接为手机上显示的代理的ip和端口</p>
<p><img src="http://i.imgur.com/LgzLSLN.png" alt=""></p>
<h3 id="centos">centos</h3><p>给centos设置全局代理的方法</p>
<p>在 /etc/profile 中添加<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">http_proxy=http://192.168.0.13:2516&#10;export http_proxy</span><br></pre></td></tr></table></figure></p>
<p>然后执行<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure></p>
<p>代理就设置成功了，下面是设置前后的差别</p>
<p><img src="http://i.imgur.com/Y8rARNg.png" alt=""></p>
<blockquote>
<p>这个方式的设置是可以访问google，但是是没法登陆google账号，或者访问youtube视频的，这个只在需要临时用到代理的时候可以用用，手机上用还是比较方便的</p>
<p>以手机设置代理的方式就介绍到这里，下面将介绍下用goagent的方式翻墙，稳定</p>
</blockquote>
<h3 id="goagent作为代理的翻墙方式">goagent作为代理的翻墙方式</h3><p>centos下直接运行goagent并且设置代理</p>
<p>将安装包下载到操作系统当中，然后进入到目录当中，并且运行python proxy.py</p>
<p>注意下面的GAE APPID 那个地方是可以设置多个的，每个每台的流量好像是5G，一般是够用的，可以同时设置多个账号<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">[root@vsm local]# pwd&#10;/root/goagent-3.0/local&#10;[root@vsm local]# python proxy.py &#10;GoAgent                                                      ,,   &#10;------------------------------------------------------&#10;GoAgent Version    : 3.1.18 (python/2.6.6 pyopenssl/0.10)&#10;Listen Address     : 0.0.0.0:8087&#10;GAE Mode           : https&#10;GAE Profile        : ipv4&#10;GAE APPID          : zphj19871a|zphj1987b|zphj19872c&#10;Pac Server         : http://192.168.0.15:8086/proxy.pac&#10;Pac File           : file:///root/goagent-3.0/local/proxy.pac&#10;------------------------------------------------------</span><br></pre></td></tr></table></figure></p>
<p>设置全局代理<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#22312; /etc/profile &#20013;&#28155;&#21152; &#10;&#10;&#9;http_proxy=http://192.168.0.13:2516&#10;&#9;export http_proxy&#10;&#9;https_proxy=http://127.0.0.1:8087&#10;&#9;export https_proxy&#10;&#28982;&#21518;&#25191;&#34892;&#10;&#9;source /etc/profile</span><br></pre></td></tr></table></figure></p>
<p>执行效果：</p>
<p><img src="http://i.imgur.com/R22rrFZ.png" alt=""></p>
<p>真正使用浏览器可能还需要导入<code>goagent-3.0/local/CA.crt</code>证书，证书的导入根据软件的需要，chrome浏览器里面是需要导入证书才能登陆google的账户的</p>
<hr>
<blockquote>
<p><strong>本文作者</strong>：zphj1987</p>
<p><strong>邮箱</strong>：199383004@qq.com</p>
<p>有技术问题欢迎交流</p>
<p>写于 2015-02-28 夜</p>
</blockquote>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="手机作为翻墙路由器的方式">手机作为翻墙路由器的方式</h3><p>首先介绍的是手机上的翻墙软件，这个只能走http协议，不能走https协议，在手机上使用很方便，能够方便的访问各种网站，但是作为其他设备的时候，就只能提供http的，那么像google需要用到https的时候，其他设备就出现无法访问情况</p>
<p>软件下载地址（已经存放到百度盘）<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#38142;&#25509;&#65306;http://pan.baidu.com/s/1eQs35a6 &#23494;&#30721;&#65306;3u19</span><br></pre></td></tr></table></figure></p>
<p><img src="http://i.imgur.com/HeUIJ6e.png" alt=""></p>
<p>点击软件后出现下面的界面就可以访问了，这个是全局的代理，所以可以直接使用手机访问外网了，可以开启更多功能</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[expect循环的写法]]></title>
    <link href="http://yoursite.com/2015/03/23/expect%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%86%99%E6%B3%95/"/>
    <id>http://yoursite.com/2015/03/23/expect循环的写法/</id>
    <published>2015-03-22T23:55:53.000Z</published>
    <updated>2015-03-26T06:27:09.879Z</updated>
    <content type="html"><![CDATA[<p>脚本:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/expect&#10;spawn sensors-detect&#10;for &#123;set i 0&#125; &#123;$i&#60;=10&#125; &#123;incr i&#125; &#123;&#10;expect &#34;:&#34;&#10;send &#34;\n&#34;&#10;&#125;&#10;interact</span><br></pre></td></tr></table></figure></p>
<p>解释:</p>
<p>spawn是启动命令<br>for为循环的写法<br>interact为退出<br>这个脚本目的是在一次运行过程中不断模拟用户的enter操作</p>
<p>写于:2013年08月12日<br>更新于: 2015年03月23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>脚本:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">#!/usr/bin/expect&#10;spawn sensors-detect&#10;for &]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[用grub4dos来实现移动硬盘安装linux系统(图重弄)]]></title>
    <link href="http://yoursite.com/2015/03/22/%E7%94%A8grub4dos%E6%9D%A5%E5%AE%9E%E7%8E%B0%E7%A7%BB%E5%8A%A8%E7%A1%AC%E7%9B%98%E5%AE%89%E8%A3%85linux%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2015/03/22/用grub4dos来实现移动硬盘安装linux系统/</id>
    <published>2015-03-22T14:27:07.000Z</published>
    <updated>2015-03-26T06:27:32.201Z</updated>
    <content type="html"><![CDATA[<p>网上看了一些grub4dos相关教程,虽然相关资料很多,但是一步步做下来还是会出现一些问题,并且有些地方也没有说清楚,现在写下来供自己以后查看</p>
<p>由于使用utraliso软件做centos6.4系统盘的时候,由于centos系统盘超过4G,而utraliso软件做系统盘的时候默认文件系统ext格式,而ext格式不支持超过4G的文件,所以就无法启动,所以研究了下用grub4dos这个软件来实现移动硬盘安装linux系统</p>
<p>首先需要准备两个文件<br>grub4dos-0.4.4.zip<br>grubinst-1.1-bin-w32-2008-01-01.zip</p>
<p>解压grub4dos-0.4.4.zip</p>
<p><img src="http://fmn.rrimg.com/fmn061/20130605/2150/b_large_LQAI_39a3000004ac1262.jpg" alt=""></p>
<p>&lt;这里需要注意下，如果用移动硬盘想实现的是只装一种系统话，那么就不需要对硬盘分区，如果想装多个系统的话就可以对移动硬盘分几个区，每个分区可以放一种操作系统&gt;</p>
<p>在win7的开始菜单中搜索 计算机管理&gt;磁盘管理<br>然后选择你的移动硬盘,然后将第一个盘符标记为活动分区,这样移动硬盘这个区才能被识别,从而作为启动分区</p>
<p><img src="http://fmn.rrimg.com/fmn063/20130605/2200/b_large_VXDK_39a3000004d91262.jpg" alt=""></p>
<p>解压grubinst-1.1-bin-w32-2008-01-01.zip 运行<br>grubinst_gui.exe<br>磁盘选择你的移动硬盘<br>然后点分区列表右边的刷新<br>然后选择整个磁盘(MBR),然后点击安装</p>
<p><img src="http://fmn.rrfmn.com/fmn058/20130605/2215/b_large_1Zyp_5715000001f51263.jpg" alt=""></p>
<p>将刚刚解压得到的grub4dos-0.4.4这个目录下的chinese目录下的三个文件拷贝到你准备用来做安装系统移动硬盘,也就是刚刚设置为活动主分区那个盘还有grub4dos-0.4.4目录下menu.lst也拷贝到移动硬盘活动分区那个盘的根目录下，这个移动硬盘目录下最后看到的文件如下截图</p>
<p><img src="http://fmn.rrimg.com/fmn065/20130605/2210/b_large_qb9c_30620000080c1263.jpg" alt=""></p>
<p>如果这个时候你移动硬盘没分区的话，就将你的系统盘的iso全部解压到你的这个目录,系统iso解压可以用360压缩工具<br>然后修改menu.lst  ,如果比较熟悉,可以进行自定义,如果不熟悉,这里直接在下面加几行:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">title centos6.4 install&#10;kernel (hd0,0)/isolinux/vmlinuz&#10;initrd (hd0,0)/isolinux/initrd.img</span><br></pre></td></tr></table></figure></p>
<p>上面的title后面写的字段会在系统安装的时候显示，然后安装的时候选择这个centos6.4 install就行,其中(hd0,0)的前面的0是代表第一个盘,也就是你的移动盘,后面的0代表分区,代表第一个分区,如果你把系统iso解压到移动硬盘的第二个分区,那么就把这个改为1<br>isolinux/vmlinuz 就是你解压的iso里面的文件<br>到这里,系统盘已经做好了,在电脑的启动项里面选择centos6.4 install 就可以安装这个linux系统了</p>
<p>此方法对于centos6.4还是有问题 所以需要多做些工作<br>思路是把第二个分区做成linux的ext2格式就能放4G以上的iso,但是win7又无法识别ext2的盘符,所以需要做两步,第一步将第二分区格式化为ext2<br>使用这个工具:<br>ParagonPartitionManager.rar<br>使用这个工具把盘格式化为ext2<br>使用这个工具是win7下能查看ext2格式的盘符<br>Ext2Fsd-0.51.zip</p>
<p><img src="http://fmn.xnpic.com/fmn057/20130606/2145/b_large_jgCI_5038000002631263.jpg" alt=""></p>
<p><img src="http://fmn.rrimg.com/fmn060/20130606/2145/b_large_uSUd_588c000003ba1262.jpg" alt=""></p>
<p><img src="http://fmn.rrimg.com/fmn061/20130606/2155/b_large_LzJv_2a51000012851262.jpg" alt=""></p>
<p>写于: 2013年06月05日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>网上看了一些grub4dos相关教程,虽然相关资料很多,但是一步步做下来还是会出现一些问题,并且有些地方也没有说清楚,现在写下来供自己以后查看</p>
<p>由于使用utraliso软件做centos6.4系统盘的时候,由于centos系统盘超过4G,而utraliso软件]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[手机中没有该应用所需的共享库（解决手机无法安装Google plus）]]></title>
    <link href="http://yoursite.com/2015/03/22/%E6%89%8B%E6%9C%BA%E4%B8%AD%E6%B2%A1%E6%9C%89%E8%AF%A5%E5%BA%94%E7%94%A8%E6%89%80%E9%9C%80%E7%9A%84%E5%85%B1%E4%BA%AB%E5%BA%93%EF%BC%88%E8%A7%A3%E5%86%B3%E6%89%8B%E6%9C%BA%E6%97%A0%E6%B3%95%E5%AE%89%E8%A3%85Google-plus%EF%BC%89/"/>
    <id>http://yoursite.com/2015/03/22/手机中没有该应用所需的共享库（解决手机无法安装Google-plus）/</id>
    <published>2015-03-22T14:24:09.000Z</published>
    <updated>2015-03-26T06:29:00.420Z</updated>
    <content type="html"><![CDATA[<p>国行安卓手机阉割了一些google服务，需要加这三个文件:</p>
<p>com.google.android.maps.jar<br>com.google.android.maps.xml<br>NetworkLocation.apk</p>
<p>你只需将上述文件放到手机中的相应位置,重启手机就好了。<br>方法:<br>首先机器要ROOT,然后用RE管理器，把要复制的文件复制到相应的位置,修改三个文件的权限,就是竖着3行,左边全选,中间最上面选上,右边全空。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">com.google.android.maps.jar   &#23433;&#35013;&#21040;  /system/framework&#10;google.android.maps.xml       &#23433;&#35013;&#21040;  /system/etc/permissions&#10;NetworkLocation.apk           &#23433;&#35013;&#21040;  /data/app_s</span><br></pre></td></tr></table></figure></p>
<p>app_s目录需要自己建立</p>
<p>上述三个文件在下面这个地址可以下载到:<br><a href="http://vdisk.weibo.com/s/BFtBO" target="_blank" rel="external">http://vdisk.weibo.com/s/BFtBO</a> </p>
<p>写于: 2013年05月16日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>国行安卓手机阉割了一些google服务，需要加这三个文件:</p>
<p>com.google.android.maps.jar<br>com.google.android.maps.xml<br>NetworkLocation.apk</p>
<p>你只需将上述文件放到手]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[如何配置谷歌框架与市场（解决google play 闪退）]]></title>
    <link href="http://yoursite.com/2015/03/22/%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE%E8%B0%B7%E6%AD%8C%E6%A1%86%E6%9E%B6%E4%B8%8E%E5%B8%82%E5%9C%BA%EF%BC%88%E8%A7%A3%E5%86%B3google-play-%E9%97%AA%E9%80%80%EF%BC%89/"/>
    <id>http://yoursite.com/2015/03/22/如何配置谷歌框架与市场（解决google-play-闪退）/</id>
    <published>2015-03-22T14:18:20.000Z</published>
    <updated>2015-03-22T14:23:24.093Z</updated>
    <content type="html"><![CDATA[<p>没有谷歌电子市场。好多游戏都不能玩。像狂野之血,超凡蜘蛛侠。。。等等大型游戏。</p>
<p>大家都知道国产机的ROM包把谷歌的GMS和谐掉了,所以直接装谷歌电子市场肯定会出现闪退,这样就又牵扯到另一个基础服务——谷歌框架,估计想玩大型游戏的机友对这个词都不陌生,但是可能大家按照许多热心机友说的最终还是没能把这个电子市场搞定,接下来大家按这个步骤,可以成功,亲测。</p>
<p>步骤如下:<br>第一步:需要有root权限和RE管理器</p>
<p>第二步:下载GoogleServiesFramework.apk(谷歌<br>服务框架,必需),将GoogleServiesFramework.apk复制到文件夹/system/app 下,然后点击安装,但是貌似不点安装也行,但是权限一定得改,然后修改权限——第一行,第一个、第二个打勾,第二行,第一个打勾,第三行,第一个打勾。(这个权限一定要搞好,有可能大家都是少了这步) </p>
<p>第三步:下载谷歌电子市场，无论下载过来的电子市场文件名叫什么,都把它重命名为Vending.apk,像GoogleServiesFramework.apk一样移动到文件夹 /system/app 下,安装(这个必须安装)。然后修改权限,与GoogleServiesFramework.apk一样.</p>
<p>第四步:重启手机<br>ok,联网,打开谷歌电子市场,就可以登录了。</p>
<p>写于: 2013年05月16日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>没有谷歌电子市场。好多游戏都不能玩。像狂野之血,超凡蜘蛛侠。。。等等大型游戏。</p>
<p>大家都知道国产机的ROM包把谷歌的GMS和谐掉了,所以直接装谷歌电子市场肯定会出现闪退,这样就又牵扯到另一个基础服务——谷歌框架,估计想玩大型游戏的机友对这个词都不陌生,但是可能大]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vmware Tools is currently being installed on your system]]></title>
    <link href="http://yoursite.com/2015/03/22/Vmware-Tools-is-currently-being-installed-on-your-system/"/>
    <id>http://yoursite.com/2015/03/22/Vmware-Tools-is-currently-being-installed-on-your-system/</id>
    <published>2015-03-22T13:47:15.000Z</published>
    <updated>2015-03-26T05:50:25.224Z</updated>
    <content type="html"><![CDATA[<p>问题描述:<br>使用虚拟机安装Ubuntu过程中一直停留在“PLEASE WAIT! Vmware Tools is currently<br>being installed on your system”如下图:</p>
<p><img src="http://7xi6lo.com1.z0.glb.clouddn.com/vmware1.jpg" alt="">]</p>
<p>软件环境<br>VMWare 8<br>Ubuntu 12.10</p>
<p>解决方案如下</p>
<a id="more"></a>
<p>做下面三步操作后重启系统 :</p>
<p>Restore the /etc/issue file:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/issue.backup /etc/issue</span><br></pre></td></tr></table></figure></p>
<p>Restore the /etc/rc.local file:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv /etc/rc.local.backup /etc/rc.local</span><br></pre></td></tr></table></figure></p>
<p>Restore the /etc/init/lightdm.conf file:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo mv /opt/vmware-tools-installer/lightdm.conf /etc/init</span><br></pre></td></tr></table></figure></p>
<p>Then reboot.</p>
<p>写于: 2012年12月14日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>问题描述:<br>使用虚拟机安装Ubuntu过程中一直停留在“PLEASE WAIT! Vmware Tools is currently<br>being installed on your system”如下图:</p>
<p><img src="http://7xi6lo.com1.z0.glb.clouddn.com/vmware1.jpg" alt="">]</p>
<p>软件环境<br>VMWare 8<br>Ubuntu 12.10</p>
<p>解决方案如下</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[win7问题步骤记录器 （远程协助）]]></title>
    <link href="http://yoursite.com/2015/03/22/win7%E9%97%AE%E9%A2%98%E6%AD%A5%E9%AA%A4%E8%AE%B0%E5%BD%95%E5%99%A8-%EF%BC%88%E8%BF%9C%E7%A8%8B%E5%8D%8F%E5%8A%A9%EF%BC%89/"/>
    <id>http://yoursite.com/2015/03/22/win7问题步骤记录器-（远程协助）/</id>
    <published>2015-03-22T11:39:23.000Z</published>
    <updated>2015-03-22T11:41:20.833Z</updated>
    <content type="html"><![CDATA[<p>win7问题步骤记录器<br>有很多时候,身在远方的家人或者是朋友会要求您辅导他们计算机问题,但是又不知道该如何明确向您表达这个问题，这个处境是很令人沮丧的。<br>微软在Windows 7中添加的问题步骤记录器,将会帮助您与您的朋友摆脱沮丧。在这种情况下,您的朋友只要单击开始菜单、键入PSR,按住Enter键，再点击开始记录按钮即可。启用这项功能后,当您的朋友进行问题操作时,该记录器将会逐一记录您的朋友的操作步骤,并将它们压缩在一个MHTML文件中发送给您即可。无疑,这是个快捷、简单与高效的方法,这将有助于缩短您的故障排除时间。 </p>
<p>写于: 2012年08月23日<br>更新于: 2015年03月23日 </p>
]]></content>
    <summary type="html">
    <![CDATA[<p>win7问题步骤记录器<br>有很多时候,身在远方的家人或者是朋友会要求您辅导他们计算机问题,但是又不知道该如何明确向您表达这个问题，这个处境是很令人沮丧的。<br>微软在Windows 7中添加的问题步骤记录器,将会帮助您与您的朋友摆脱沮丧。在这种情况下,您的朋友只要单击]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[检查linux下服务器的带宽]]></title>
    <link href="http://yoursite.com/2015/03/22/%E6%A3%80%E6%9F%A5linux%E4%B8%8B%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E5%B8%A6%E5%AE%BD/"/>
    <id>http://yoursite.com/2015/03/22/检查linux下服务器的带宽/</id>
    <published>2015-03-22T11:25:43.000Z</published>
    <updated>2015-03-22T11:33:25.168Z</updated>
    <content type="html"><![CDATA[<p>设想:公司 A 有一个名为 bsdocfs 的存储服务器,并通过名为 beckham 的客户端节点装载 NFS。公司 A 确定他们需要从 bsdocfs得到更多的带宽,因为有大量的节点需要访问 bsdocfs 的共享文件系统。<br>实现此操作的最常用和最便宜的方式是将两个千兆网卡组合在一起。这是最便宜的,因为您通常会有一个额外的可用 NIC 和一个额外的端口。<br>所以采取此这个方法。不过现在的问题是?到底需要多少带宽?</p>
<p>千兆网卡以太网理论上的限制是 128MBit/s。这个数字从何而来,看看这些计算:<br>1Gb = 1024Mb;1024Mb/8 = 128MB;”b” = “bits,”、”B” = “bytes”</p>
<p>但实际看到的是什么呢,有什么好的测量方法呢,我推荐一个工具 iperf。可以按照以下方法获得 iperf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://dast.nlanr.net/Projects/Iperf2.<span class="number">0</span>/iperf-<span class="number">2.0</span>.<span class="number">2</span>.tar.gz</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>或者:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ apt-get install iperf</span><br></pre></td></tr></table></figure>
<p>需要在 bsdocfs 和 beckham 均可见的共享文件系统上安装此工具,或者在两个节点上编译并安装。<br>在 bsdocfs 上,运行:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ iperf <span class="operator">-s</span> <span class="operator">-f</span> M</span><br></pre></td></tr></table></figure>
<p>这台机器将用作服务器并以 MBit/s 为单位输出执行速度。<br>在 beckham 节点上,运行:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ iperf -c bsdocfs -P <span class="number">4</span> <span class="operator">-f</span> M -w <span class="number">256</span>k -t <span class="number">60</span></span><br></pre></td></tr></table></figure>
<p>两个屏幕上的结果都指示了速度是多少。在使用千兆网卡的普通服务器上,可能会看到速度约为 112MBit/s。这是 TCP 堆栈和物理电缆中的常用带宽。通过以端到端的方式连接两台服务器,每台服务器使用两个联结的以太网卡,我获得了约 220MBit/s 的带宽。<br>事实上,在联结的网络上看到的 NFS 约为 150-160MBit/s。这仍然表示带宽可以达到预期效果。如果看到更小的值,则应该检查是否有问题。</p>
<p>我最近碰到一种情况,即通过连接驱动程序连接两个使用了不同驱动程序的 NIC。这导致性能非常低,带宽约为 20MBit/s,比不连接以太网卡时的带宽还小,做bond聚合一定要使用同型号网卡。</p>
<p>写于: 2013年08月07日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>设想:公司 A 有一个名为 bsdocfs 的存储服务器,并通过名为 beckham 的客户端节点装载 NFS。公司 A 确定他们需要从 bsdocfs得到更多的带宽,因为有大量的节点需要访问 bsdocfs 的共享文件系统。<br>实现此操作的最常用和最便宜的方式是将两个千兆网卡组合在一起。这是最便宜的,因为您通常会有一个额外的可用 NIC 和一个额外的端口。<br>所以采取此这个方法。不过现在的问题是?到底需要多少带宽?</p>
<p>千兆网卡以太网理论上的限制是 128MBit/s。这个数字从何而来,看看这些计算:<br>1Gb = 1024Mb;1024Mb/8 = 128MB;”b” = “bits,”、”B” = “bytes”</p>
<p>但实际看到的是什么呢,有什么好的测量方法呢,我推荐一个工具 iperf。可以按照以下方法获得 iperf</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ wget http://dast.nlanr.net/Projects/Iperf2.<span class="number">0</span>/iperf-<span class="number">2.0</span>.<span class="number">2</span>.tar.gz</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux利用screen进行shell下的屏幕协作]]></title>
    <link href="http://yoursite.com/2015/03/22/linux%E5%88%A9%E7%94%A8screen%E8%BF%9B%E8%A1%8Cshell%E4%B8%8B%E7%9A%84%E5%B1%8F%E5%B9%95%E5%8D%8F%E4%BD%9C/"/>
    <id>http://yoursite.com/2015/03/22/linux利用screen进行shell下的屏幕协作/</id>
    <published>2015-03-22T11:22:22.000Z</published>
    <updated>2015-03-26T05:44:31.317Z</updated>
    <content type="html"><![CDATA[<p>我们都知道linux是支持多终端并行处理的<br>但是某些时候我们可能有比较特殊的需求需要两个人同时处理一个终端,screen 正好能满足这个要求</p>
<p>首先需要安装screen软件:</p>
<p>debian和ubuntu下面都是通过:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install screen</span><br></pre></td></tr></table></figure></p>
<p>进行安装的.</p>
<a id="more"></a>
<p>假如现在有a和b需要进行屏幕协作,那么操作步骤如下:<br>a在终端运行:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -S   zp</span><br></pre></td></tr></table></figure></p>
<p>b然后在终端运行:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">screen -x  zp</span><br></pre></td></tr></table></figure></p>
<p>这个时候两边的用户的操作是实时同步的。</p>
<p>写于: 2012年08月07日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>我们都知道linux是支持多终端并行处理的<br>但是某些时候我们可能有比较特殊的需求需要两个人同时处理一个终端,screen 正好能满足这个要求</p>
<p>首先需要安装screen软件:</p>
<p>debian和ubuntu下面都是通过:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install screen</span><br></pre></td></tr></table></figure></p>
<p>进行安装的.</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用Ganglia监控系统监控集群(debian)]]></title>
    <link href="http://yoursite.com/2015/03/22/%E4%BD%BF%E7%94%A8Ganglia%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F%E7%9B%91%E6%8E%A7%E9%9B%86%E7%BE%A4-debian/"/>
    <id>http://yoursite.com/2015/03/22/使用Ganglia监控系统监控集群-debian/</id>
    <published>2015-03-22T09:20:06.000Z</published>
    <updated>2015-03-26T06:30:01.256Z</updated>
    <content type="html"><![CDATA[<p>anglia是一个集群监控软件,底层使用RRDTool获得数据。<br>Ganglia分为ganglia-monitor和gmetad两部分,前者运行在集群每个节点上(被监控机器)收集RRDTool产生的数据,后者运行在监控服务器上,收集每个ganglia-monitor的数据,通过Web UI可以看到直观的各种图表。</p>
<p>在debian上安装Ganglia非常简单,首先安装下面三个包。因为要使用Web服务器才能看到图表,所以如果没有安装apache的话,会自动安装apache服务器。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#9;apt-get installganglia-monitor  #&#36825;&#20010;&#21253;&#23433;&#35013;&#22312;&#34987;&#30417;&#25511;&#26426;&#22120;&#21363;&#21487;&#10;&#9;apt-get install ganglia-webfront gmetad  #&#36825;&#20004;&#20010;&#21253;&#23433;&#35013;&#22312;&#30417;&#25511;&#26381;&#21153;&#22120;&#65292;&#21069;&#32773;&#25552;&#20379;web&#39029;&#38754;&#65292;&#21518;&#32773;&#25910;&#38598;&#20854;&#20182;&#26426;&#22120;&#30340;&#30417;&#25511;&#25968;&#25454;&#10;```   &#10;     &#10;&#34987;&#30417;&#25511;&#23433;&#35013;&#23436;&#25104;&#20043;&#21518;&#65292;gmond&#26381;&#21153;&#20250;&#36816;&#34892;&#36215;&#26469;&#65292;&#20351;&#29992;&#19979;&#38754;&#30340;&#21629;&#20196;&#21487;&#20197;&#21551;&#21160;&#36825;&#20010;&#26381;&#21153;&#12290;&#10;```raw&#10;&#9;/etc/init.d/ganglia-monitor restart</span><br></pre></td></tr></table></figure></p>
<p>(配置文件的路径在/etc/ganglia/gmond.conf)基本不用配置就可以启用</p>
<a id="more"></a>
<p>配置监控服务器(展示页面的服务器)</p>
<p>因为ganglia-webfront这个包默认将Web相关的代码安装在”/usr/share/ganglia-webfrontend/”路径下,这样apache访问不到。可以使用软链接或者直接将目录移到”/var/www/”目录下。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">ln-s /usr/share/ganglia-webfrontend//var/www/ganglia</span><br></pre></td></tr></table></figure></p>
<p>接着在浏览器输入”<a href="http://localhost/ganglia”就可以看到Web" target="_blank" rel="external">http://localhost/ganglia”就可以看到Web</a> UI了</p>
<p>需要监控更多机器的时候，只需要在机器上安装ganglia-monitor 启动服务即可</p>
<p>补充说明:<br>一、主页的显示的时间为格林威治时间,所以看起来很奇怪,想要显示为本地时间,需要修改提供网页机器的php.ini文件<br>路径为:/etc/php5/apache2/php.ini </p>
<p>将[Date]下的设置为date.timezone =Asia/Shanghai</p>
<p>重启apache2<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">/etc/init.d/apache2 restart</span><br></pre></td></tr></table></figure></p>
<p>再看主页,时间变成了当前机器时间</p>
<p>二、python监控插件的扩展<br>为了确保Ganglia的安装有了Python支持的设置,检查一下以下设置<br>gmond.conf 有一行  include (“/etc/ganglia/conf.d/*.conf”) ,这是你应该放置.conf格式的python模块配置文件所在的目录。<br>modpython.conf 这个文件应该存在于/etc/ganglia/conf.d 中,它包含了pyconf文件的所在位置<br>modpython.so应该在/usr/lib/ganglia中<br>/usr/lib/ganglia/python_modules这个目录应该存在,这是你放置以.py结尾的python模块文件所在的目录</p>
<p>写于: 2012年08月02日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>anglia是一个集群监控软件,底层使用RRDTool获得数据。<br>Ganglia分为ganglia-monitor和gmetad两部分,前者运行在集群每个节点上(被监控机器)收集RRDTool产生的数据,后者运行在监控服务器上,收集每个ganglia-monitor的数据,通过Web UI可以看到直观的各种图表。</p>
<p>在debian上安装Ganglia非常简单,首先安装下面三个包。因为要使用Web服务器才能看到图表,所以如果没有安装apache的话,会自动安装apache服务器。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&#9;apt-get installganglia-monitor  #&#36825;&#20010;&#21253;&#23433;&#35013;&#22312;&#34987;&#30417;&#25511;&#26426;&#22120;&#21363;&#21487;&#10;&#9;apt-get install ganglia-webfront gmetad  #&#36825;&#20004;&#20010;&#21253;&#23433;&#35013;&#22312;&#30417;&#25511;&#26381;&#21153;&#22120;&#65292;&#21069;&#32773;&#25552;&#20379;web&#39029;&#38754;&#65292;&#21518;&#32773;&#25910;&#38598;&#20854;&#20182;&#26426;&#22120;&#30340;&#30417;&#25511;&#25968;&#25454;&#10;```   &#10;     &#10;&#34987;&#30417;&#25511;&#23433;&#35013;&#23436;&#25104;&#20043;&#21518;&#65292;gmond&#26381;&#21153;&#20250;&#36816;&#34892;&#36215;&#26469;&#65292;&#20351;&#29992;&#19979;&#38754;&#30340;&#21629;&#20196;&#21487;&#20197;&#21551;&#21160;&#36825;&#20010;&#26381;&#21153;&#12290;&#10;```raw&#10;&#9;/etc/init.d/ganglia-monitor restart</span><br></pre></td></tr></table></figure></p>
<p>(配置文件的路径在/etc/ganglia/gmond.conf)基本不用配置就可以启用</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[用rsync备份一台linux服务器上的数据]]></title>
    <link href="http://yoursite.com/2015/03/22/%E7%94%A8rsync%E5%A4%87%E4%BB%BD%E4%B8%80%E5%8F%B0linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E7%9A%84%E6%95%B0%E6%8D%AE/"/>
    <id>http://yoursite.com/2015/03/22/用rsync备份一台linux服务器上的数据/</id>
    <published>2015-03-22T08:53:33.000Z</published>
    <updated>2015-03-26T06:30:42.888Z</updated>
    <content type="html"><![CDATA[<p>rsync是安装完linux后都会自带的,在机器上运行rsync命令看是否有安装即可</p>
<h2 id="备份到远程服务器">备份到远程服务器</h2><p>这里介绍的rsync的用途是备份一台linux服务器上的数据到另外一台机器</p>
<h3 id="环境">环境</h3><p>将需要备份机器叫做服务器端  (192.168.0.195)<br>将备份后数据存放机器叫做客户端 (192.168.0.196)</p>
<h3 id="配置">配置</h3><h4 id="1-服务器端的配置:">1.服务器端的配置:</h4><p>这里是准备备份/chinfotech/kernel/zp/这个目录,修改配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/rsyncd.conf (没有就创建)</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>配置文件如下:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">uid=root&#10;gid=root&#10;max connections=10     &#10;use chroot=no&#10;log file=/var/log/rsyncd.log&#10;pid file=/var/run/rsyncd.pid&#10;lock file=/var/run/rsyncd.lock&#10;&#10;[zp]&#10;path=/chinfotech/kernel/zp/ &#10;comment=beifen&#10;ignore errors&#10;read only = no&#10;hosts allow=*</span><br></pre></td></tr></table></figure></p>
<p>启动进程:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync --daemon --config=/etc/rsyncd.conf</span><br></pre></td></tr></table></figure>
<p>服务器端就配置好了.</p>
<h4 id="2-客户端机器的配置">2.客户端机器的配置</h4><p>在客户端不需要太多配置只需要执行:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rsync -avz --bwlimit=<span class="number">30000</span> root@<span class="number">192.168</span>.<span class="number">0.195</span>::zp /back/zp/</span><br></pre></td></tr></table></figure>
<p>参数解释:<br>-a, —archive 归档模式，表示以递归方式传输文件,并保持所有文件属性<br>-v, —verbose 详细模式输出<br>-z, —compress 对备份的文件在传输时进行压缩处理<br>—bwlimit=KBPS 限制I/O带宽，KBytes per second (最好限速,不然长时间数据传输硬盘受不了)<br>::zp这个是上面服务器配置当中的[zp]</p>
<p>这样备份就开始了</p>
<hr>
<h2 id="配置rsync的本地同步">配置rsync的本地同步</h2><p>使用命令进行同步,这个是从lsyncd这个软件里面提取的命令，也可以用那个做实时同步,这个是定期同步</p>
<p>每天的三点过5分执行同步,加超时:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">5 3 * * * root timeout 7200  rsync -qvzrtopg    /zbkc /sdl&#10;5 3 * * * root timeout 7200  rsync -qvzrtopg --delete   /zbkc /sdl</span><br></pre></td></tr></table></figure></p>
<p>让配置文件生效</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">crontab /etc/crontab</span><br></pre></td></tr></table></figure>
<p>重启服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/etc/init.d/cron restart</span><br></pre></td></tr></table></figure>
<p>写于: 2012年07月20日,2014年06月24日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>rsync是安装完linux后都会自带的,在机器上运行rsync命令看是否有安装即可</p>
<h2 id="备份到远程服务器">备份到远程服务器</h2><p>这里介绍的rsync的用途是备份一台linux服务器上的数据到另外一台机器</p>
<h3 id="环境">环境</h3><p>将需要备份机器叫做服务器端  (192.168.0.195)<br>将备份后数据存放机器叫做客户端 (192.168.0.196)</p>
<h3 id="配置">配置</h3><h4 id="1-服务器端的配置:">1.服务器端的配置:</h4><p>这里是准备备份/chinfotech/kernel/zp/这个目录,修改配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/rsyncd.conf (没有就创建)</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[修改ssh的默认22端口，并使用scp的方法]]></title>
    <link href="http://yoursite.com/2015/03/22/%E4%BF%AE%E6%94%B9ssh%E7%9A%84%E9%BB%98%E8%AE%A422%E7%AB%AF%E5%8F%A3%EF%BC%8C%E5%B9%B6%E4%BD%BF%E7%94%A8scp%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2015/03/22/修改ssh的默认22端口，并使用scp的方法/</id>
    <published>2015-03-22T08:49:01.000Z</published>
    <updated>2015-03-26T06:31:00.836Z</updated>
    <content type="html"><![CDATA[<p>修改默认的22的ssh端口只需要修改 /etc/ssh/sshd_config 中的 port 字段为你想要的端口就可以了<br>以后用其他机器ssh登录这台机器只需要:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -p (port)  (ip)</span><br></pre></td></tr></table></figure></p>
<p>使用scp 就是:<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scp -P (port) /usr/myfile   IP:/tmp</span><br></pre></td></tr></table></figure></p>
<p>写于: 2012年05月05日<br>更新于: 2015年03月02日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>修改默认的22的ssh端口只需要修改 /etc/ssh/sshd_config 中的 port 字段为你想要的端口就可以了<br>以后用其他机器ssh登录这台机器只需要:<br><figure class="highlight bash"><table><tr><td cl]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[正确用DD测试磁盘读写速度]]></title>
    <link href="http://yoursite.com/2015/03/22/%E6%AD%A3%E7%A1%AE%E7%94%A8DD%E6%B5%8B%E8%AF%95%E7%A3%81%E7%9B%98%E8%AF%BB%E5%86%99%E9%80%9F%E5%BA%A6/"/>
    <id>http://yoursite.com/2015/03/22/正确用DD测试磁盘读写速度/</id>
    <published>2015-03-22T08:36:15.000Z</published>
    <updated>2015-03-26T06:31:24.582Z</updated>
    <content type="html"><![CDATA[<p>问: 以下几种方式测试磁盘读写速度有什么区别?<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> </span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> ; sync</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> conv=fdatasync</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> oflag=dsync</span><br></pre></td></tr></table></figure></p>
<p>答:区别在于内存中写缓存的处理方式。</p>
<a id="more"></a>
<p>1.dd if=/dev/zero of=test bs=1M count=128<br>没有加任何参数,dd默认的方式不包括“同步(sync)”命令。也就是说,dd命令完成前并没有让系统真正把文件写到磁盘上。所以以上命令只是单纯地把这128MB的数据读到内存缓冲当中,写缓存[write cache]。所以你得到的将是一个超级快的速度。因为其实dd给你的只是读取到缓存的速度,直到dd完成后系统才开始真正往磁盘上写数据,但这个速度你是看不到了。所以如果这个速度很快,先不要偷着乐。呵呵</p>
<p>2.dd if=/dev/zero of=test bs=1M count=128 ; sync<br>和前面1中的完全一样。分号隔开的只是先后两个独立的命令。当sync命令准备开始往磁盘上真正写入数据的时候,前面dd命令已经把错误的“写入速度”值显示在屏幕上了。所以你还是得不到真正的写入速度。</p>
<p>3.dd if=/dev/zero of=test bs=1M count=128 conv=fdatasync<br>加入这个参数后,dd命令执行到最后会真正执行一次“同步(sync)”操作,所以这时候你得到的是读取这128M数据到内存并写入到磁盘上所需的时间,这样算出来的时间才是比较符合实际的。</p>
<p>4.dd if=/dev/zero of=test bs=1M count=128 oflag=dsync<br>加入这个参数后,dd在执行时每次都会进行同步写入操作。也就是说,这条命令每次读取1M后就要先把这1M写入磁盘,然后再读取下面这1M,一共重复128次。这可能是最慢的一种方式了,因为基本上没有用到写缓存(write cache)。</p>
<p>问:那应该用哪一种呢?<br>答:建议使用<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dd bs=<span class="number">1</span>M count=<span class="number">128</span> <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> conv=fdatasync</span><br></pre></td></tr></table></figure></p>
<p>因为这种方式最接近计算机实际操作,所以测出来的数据最有参考价值</p>
<p>写于: 2012年05月02日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>问: 以下几种方式测试磁盘读写速度有什么区别?<br><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> </span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> ; sync</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> conv=fdatasync</span><br><span class="line">dd <span class="keyword">if</span>=/dev/zero of=<span class="built_in">test</span> bs=<span class="number">1</span>M count=<span class="number">128</span> oflag=dsync</span><br></pre></td></tr></table></figure></p>
<p>答:区别在于内存中写缓存的处理方式。</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[西数WD2T硬盘分区对齐的方法]]></title>
    <link href="http://yoursite.com/2015/03/22/%E8%A5%BF%E6%95%B0WD2T%E7%A1%AC%E7%9B%98%E5%88%86%E5%8C%BA%E5%AF%B9%E9%BD%90%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2015/03/22/西数WD2T硬盘分区对齐的方法/</id>
    <published>2015-03-22T08:25:08.000Z</published>
    <updated>2015-03-26T06:31:55.748Z</updated>
    <content type="html"><![CDATA[<p>新购一个西数2T硬盘,也就是绿盘的那种,淘宝500左右,支持高级格式化。 </p>
<p>到手以后,分区格式化,前几天格式化完成以后,fdisk -l 发现如下文字 </p>
<p>引用<br>Partition 1 does not start on physical sector boundary.</p>
<p>网上找了下,说是软件的问题,后来折腾了下,应该是分区没有对齐的原因,至于为什么要对齐,优点很多,好像这个是跟神马高级分区格式化有关,具体的原理神马的,我就不讨论了,反正有一点,对齐后,性能会有提升。 </p>
<a id="more"></a>
<p>对齐后,用fdisk -lu 查看的结果如下<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">Disk /dev/sdc: 2000.4 GB, 2000398934016 bytes&#10;255 heads, 63 sectors/track, 243201 cylinders, total 3907029168 sectors&#10;Units = sectors of 1 * 512 = 512 bytes&#10;Sector size (logical/physical): 512 bytes / 512 bytes&#10;I/O size (minimum/optimal): 512 bytes / 512 bytes&#10;Disk identifier: 0x2fa8ebd1&#10;&#10;   Device Boot      Start         End      Blocks   Id  System&#10;/dev/sdc1            2048  3907028991  1953513472   83  Linux</span><br></pre></td></tr></table></figure></p>
<p>怎么样个对齐的方法呢,就是分区的时候,要注意,不要用 fdisk 来分区,不是说fdisk不行,经过我的测试,用 fdisk 分区,我明明分的是2T,结果却是1T大小，用 parted 分区就没有这个问题 </p>
<p>debian 下面,如果没有 parted 这个工具,apt-get 安装,安装完成以后,就可以使用了 </p>
<p>引用</p>
<pre><code class="raw">root@localhost ~]# parted /dev/sdb # &#20351;&#29992;parted&#26469;&#23545;GPT&#30913;&#30424;&#25805;&#20316;,&#36827;&#20837;&#20132;&#20114;&#24335;&#27169;&#24335;&#10;GNU Parted 1.8.1 Using /dev/sdb Welcome to GNU Parted! Type &#8216;help&#8217; to view a list of commands.&#10;(parted) mklabel msdos           # &#23558;MBR&#30913;&#30424;&#26684;&#24335;&#21270;&#20026;msdos 2T&#30340;&#30828;&#30424; msdos &#27809;&#26377;&#38382;&#39064;&#10;(parted) p                      #&#25171;&#21360;&#24403;&#21069;&#20998;&#21306;&#10;(parted) mkpart primary 1 2TB                # &#20998;&#19968;&#20010;2T&#30340;&#20027;&#20998;&#21306;,&#36825;&#37324;&#36755;&#20837;1,&#21542;&#21017;&#20250;&#25552;&#31034;&#24615;&#33021;&#38382;&#39064;&#10;(parted) p                         #&#25171;&#21360;&#24403;&#21069;&#20998;&#21306;&#10;(parted) q &#36864;&#20986;&#10;Information: Don&#8217;t forget to update /etc/fstab, if necessary.
</code></pre>
<p>退出后,用 mkfs.ext4 格式化就好了 </p>
<p>然后再用 fdisk -lu 查看,已经没有那个提示了 </p>
<p>这里说明下,对齐,就是说分区的时候,开始的扇区要以 8 的倍数来开始,而 fisk 默认是 63 ,对老硬盘没有什么问题,但是对西数的新硬盘, 4k 扇区的,就会有对齐的问题,会导致性能下降</p>
<p>写于: 2012年05月02日<br>更新于:2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>新购一个西数2T硬盘,也就是绿盘的那种,淘宝500左右,支持高级格式化。 </p>
<p>到手以后,分区格式化,前几天格式化完成以后,fdisk -l 发现如下文字 </p>
<p>引用<br>Partition 1 does not start on physical sector boundary.</p>
<p>网上找了下,说是软件的问题,后来折腾了下,应该是分区没有对齐的原因,至于为什么要对齐,优点很多,好像这个是跟神马高级分区格式化有关,具体的原理神马的,我就不讨论了,反正有一点,对齐后,性能会有提升。 </p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Check Host:实时监控网站或者服务器是否可以访问]]></title>
    <link href="http://yoursite.com/2015/03/22/Check-Host-%E5%AE%9E%E6%97%B6%E7%9B%91%E6%8E%A7%E7%BD%91%E7%AB%99%E6%88%96%E8%80%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E8%AE%BF%E9%97%AE/"/>
    <id>http://yoursite.com/2015/03/22/Check-Host-实时监控网站或者服务器是否可以访问/</id>
    <published>2015-03-22T08:15:10.000Z</published>
    <updated>2015-03-22T08:24:03.487Z</updated>
    <content type="html"><![CDATA[<p>如果你拥有一个网站，那么最重要的事情就是要保证它24小时都能够访问。不过国内的虚拟主机服务非常糟糕，经常会出现各种状况,所以我们需要一个软件,可以让我们第一时间知道网站出现了无法访问的情况,从而通知售后人员解决。而Check Host就是这么一个windows下的免费网站时时监控工具。</p>
<p>服务器无法访问,那么对网站是非常不利的,而搜索引擎也会知道这个状况,因为蜘蛛不能爬行你的网页了。所以对访客以及搜索引擎排名都是不利的。不过这个事情肯定会发生,我们能做的就是提高反应速度,让这样的情况在最短的时间内解决。</p>
<p>如此一来,对于网站的实时监控就非常有必要的,但是我们又不能每隔一段时间就手动打开网站一次,这样太过于麻烦,甚至是愚蠢的,所以我们必须要使用一个软件,让其代劳，当发生状况的时候还会给你发出警告，而Check Host就可以满足你的愿望。</p>
<p>Check Host是一个windows下的小软件，只有2.2M,十分的小巧,它的原理是每隔一段时间就自动ping一下你设定的网址。如果无法ping通的话,那么就会通过几种方法告诉你。</p>
<a id="more"></a>
<p>这个软件对监控的网站和服务器没有数量方面的限制,所以你同时可以监控多个网站。</p>
<p><img src="http://7xi6lo.com1.z0.glb.clouddn.com/checkhost1.jpg" alt=""></p>
<p>使用方法: </p>
<p>当你安装运行后,点击左上角的“new”按钮添加一个任务,在出现界面的“hostname”下面输入网址。“check interval”是让你设置测试间隔,这个默认是10秒,建议间隔长一点,不然可能会谎报军情。“timeout”是超时的时间,默认1000毫秒,建议也是填较短的时间,不然可能会导致软件无法响应。如果发生这样的状况,只需等待就可以了。</p>
<p>而在新建任务界面右侧的是当ping不通是触发什么行为,如果又再次ping通又触发什么。</p>
<p>这个你有三种选择,桌面提醒、往指定邮箱发送邮件、启动某个程序或者批处理命令。并且这个是可以多选的。<br>默认情况下,桌面提醒是被激活的,一旦出现状况,你就会在桌面右侧看到小的弹窗,上面会显示不能访问的网站网址。而系统托盘的图标也会从“勾”变成“叉”。</p>
<p>而触发程序的话，你可以指定音乐播放器,那么这样就会在网站无法访问时使用声音提醒你。</p>
<p>“check interval”在软件默认设置中是10秒,不过希望你在使用的时候改成1分钟以上，这样就不会非常敏感了。</p>
<p><img src="http://7xi6lo.com1.z0.glb.clouddn.com/checkhost2.jpg" alt=""></p>
<p>写于:2012年04月26日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>如果你拥有一个网站，那么最重要的事情就是要保证它24小时都能够访问。不过国内的虚拟主机服务非常糟糕，经常会出现各种状况,所以我们需要一个软件,可以让我们第一时间知道网站出现了无法访问的情况,从而通知售后人员解决。而Check Host就是这么一个windows下的免费网站时时监控工具。</p>
<p>服务器无法访问,那么对网站是非常不利的,而搜索引擎也会知道这个状况,因为蜘蛛不能爬行你的网页了。所以对访客以及搜索引擎排名都是不利的。不过这个事情肯定会发生,我们能做的就是提高反应速度,让这样的情况在最短的时间内解决。</p>
<p>如此一来,对于网站的实时监控就非常有必要的,但是我们又不能每隔一段时间就手动打开网站一次,这样太过于麻烦,甚至是愚蠢的,所以我们必须要使用一个软件,让其代劳，当发生状况的时候还会给你发出警告，而Check Host就可以满足你的愿望。</p>
<p>Check Host是一个windows下的小软件，只有2.2M,十分的小巧,它的原理是每隔一段时间就自动ping一下你设定的网址。如果无法ping通的话,那么就会通过几种方法告诉你。</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[清理win7注册表后，没有了右键新建选项处理办法]]></title>
    <link href="http://yoursite.com/2015/03/22/%E6%B8%85%E7%90%86win7%E6%B3%A8%E5%86%8C%E8%A1%A8%E5%90%8E%EF%BC%8C%E6%B2%A1%E6%9C%89%E4%BA%86%E5%8F%B3%E9%94%AE%E6%96%B0%E5%BB%BA%E9%80%89%E9%A1%B9%E5%A4%84%E7%90%86%E5%8A%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2015/03/22/清理win7注册表后，没有了右键新建选项处理办法/</id>
    <published>2015-03-22T08:09:11.000Z</published>
    <updated>2015-03-26T06:32:11.387Z</updated>
    <content type="html"><![CDATA[<p>今天清理win7注册表的右键选项,发现清理完了后,居然没有了右键新建,什么文件都无法创建,搜索了下,发现有人给出了解决办法,如下:<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">REGEDIT4 [HKEY_CLASSES_ROOT\Directory\Background\shellex\ContextMenuHandlers\New] @=&#34;&#123;D969A300-E7FF-11d0-A93B-00A0C90F2719&#125;&#34; [HKEY_CLASSES_ROOT\Directory\Background\shellex\ContextMenuHandlers\New\command] @=hex(2):</span><br></pre></td></tr></table></figure></p>
<p>建一个文本文件,把上面的内容拷过去,然后把文件后缀改成.reg。双击执行就可以了</p>
<p>写于: 2012年04月25日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>今天清理win7注册表的右键选项,发现清理完了后,居然没有了右键新建,什么文件都无法创建,搜索了下,发现有人给出了解决办法,如下:<br><figure class="highlight"><table><tr><td class="code"><pre><span cla]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[把你的常用文件夹直接显示在“计算机”中]]></title>
    <link href="http://yoursite.com/2015/03/22/%E6%8A%8A%E4%BD%A0%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9B%B4%E6%8E%A5%E6%98%BE%E7%A4%BA%E5%9C%A8%E2%80%9C%E8%AE%A1%E7%AE%97%E6%9C%BA%E2%80%9D%E4%B8%AD/"/>
    <id>http://yoursite.com/2015/03/22/把你的常用文件夹直接显示在“计算机”中/</id>
    <published>2015-03-22T08:05:43.000Z</published>
    <updated>2015-03-26T05:52:02.848Z</updated>
    <content type="html"><![CDATA[<p>win7 中“我的电脑”改名为了“计算机”,而且计算机中不再有我的文档共享文档等链接,虽然计算机左侧的链接中有常用文件夹的链接，用户也可以把自己的快捷方式放入其中。<br>但某些东西还是想直接放在计算机中，很简单，只要把文件或文件夹或它们的快捷方式放到以下目录即可。<br><figure class="highlight"><table><tr><td class="code"><pre><span class="line">C:\Users\&#20320;&#30340;&#29992;&#25143;&#21517;\AppData\Roaming\Microsoft\Windows\Network Shortcuts</span><br></pre></td></tr></table></figure></p>
<p>即可在“计算机”中显示。</p>
<p>写于: 2012年4月24日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>win7 中“我的电脑”改名为了“计算机”,而且计算机中不再有我的文档共享文档等链接,虽然计算机左侧的链接中有常用文件夹的链接，用户也可以把自己的快捷方式放入其中。<br>但某些东西还是想直接放在计算机中，很简单，只要把文件或文件夹或它们的快捷方式放到以下目录即可。<br>]]>
    </summary>
    
  </entry>
  
</feed>
