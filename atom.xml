<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[zphj1987'Blog]]></title>
  <subtitle><![CDATA[现在所学，终有所用]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://yoursite.com/"/>
  <updated>2015-03-24T00:20:02.592Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name><![CDATA[zphj1987]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[定制ubuntu的时候修改proseed]]></title>
    <link href="http://yoursite.com/2015/03/24/%E5%AE%9A%E5%88%B6ubuntu%E7%9A%84%E6%97%B6%E5%80%99%E4%BF%AE%E6%94%B9proseed/"/>
    <id>http://yoursite.com/2015/03/24/定制ubuntu的时候修改proseed/</id>
    <published>2015-03-24T00:20:02.000Z</published>
    <updated>2015-03-24T00:20:02.592Z</updated>
    <content type="html"></content>
    <summary type="html">
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[使用iptables做端口转发]]></title>
    <link href="http://yoursite.com/2015/03/24/%E4%BD%BF%E7%94%A8iptables%E5%81%9A%E7%AB%AF%E5%8F%A3%E8%BD%AC%E5%8F%91/"/>
    <id>http://yoursite.com/2015/03/24/使用iptables做端口转发/</id>
    <published>2015-03-24T00:18:01.000Z</published>
    <updated>2015-03-24T00:19:32.917Z</updated>
    <content type="html"><![CDATA[<pre><code><span class="shebang">#!/bin/sh </span>
IPT=<span class="string">"/sbin/iptables"</span>
/bin/<span class="built_in">echo</span> <span class="string">"1"</span> &gt; /proc/sys/net/ipv4/ip_forward
/sbin/modprobe ip_tables
/sbin/modprobe iptable_filter
/sbin/modprobe iptable_nat
/sbin/modprobe ip_conntrack
/sbin/modprobe ip_conntrack_ftp
/sbin/modprobe ip_nat_ftp
<span class="variable">$IPT</span> -F
<span class="variable">$IPT</span> -t nat -F
<span class="variable">$IPT</span> -X
<span class="variable">$IPT</span> -t nat -X
<span class="variable">$IPT</span> -Z
<span class="variable">$IPT</span> -t nat -Z
<span class="comment">#DNAT 做端口转发</span>
<span class="variable">$IPT</span> -t nat -A PREROUTING <span class="operator">-d</span> <span class="number">192.168</span>.<span class="number">0.174</span> -p tcp --dport <span class="number">28</span> -j DNAT --to-destination <span class="number">192.168</span>.<span class="number">9.101</span>:<span class="number">22</span>
<span class="variable">$IPT</span> -t nat -A POSTROUTING -p tcp <span class="operator">-d</span> <span class="number">192.168</span>.<span class="number">9.101</span> --dport <span class="number">22</span> -j SNAT --to-source <span class="number">192.168</span>.<span class="number">0.174</span>

<span class="comment">#SNAT 做网关转发</span>
<span class="comment">#$IPT -t nat -A POSTROUTING  -s 192.168.0.0/16  -j SNAT --to-source 210.72.24.15</span>
</code></pre><p>备注:<br>首先需要启用NAT需要在Linux上打开内核对IP包的转发支持，linux上编辑:/etc/sysctl.conf 文件:</p>
<pre><code>net<span class="class">.ipv4</span><span class="class">.ip_forward</span> = <span class="number">1</span>
</code></pre><p>然后执行</p>
<pre><code><span class="title">sysctl</span> -p
</code></pre><p>写于: 2014年08月04日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<pre><code><span class="shebang">#!/bin/sh </span>
IPT=<span class="string">"/sbin/iptables"</span>
/bin/<span class="built_in">echo</span> ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[centos使用U盘做启动盘]]></title>
    <link href="http://yoursite.com/2015/03/24/centos%E4%BD%BF%E7%94%A8U%E7%9B%98%E5%81%9A%E5%90%AF%E5%8A%A8%E7%9B%98/"/>
    <id>http://yoursite.com/2015/03/24/centos使用U盘做启动盘/</id>
    <published>2015-03-24T00:16:17.000Z</published>
    <updated>2015-03-24T00:17:10.411Z</updated>
    <content type="html"><![CDATA[<p>软件下载地址:<br><a href="http://sourceforge.net/projects/iso2usb/files/latest/download?source=dlp" target="_blank" rel="external">http://sourceforge.net/projects/iso2usb/files/latest/download?source=dlp</a></p>
<p>写于: 2014年08月04日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>软件下载地址:<br><a href="http://sourceforge.net/projects/iso2usb/files/latest/download?source=dlp" target="_blank" rel="external">http://sourc]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu服务器启动过程中重启卡死的问题解决]]></title>
    <link href="http://yoursite.com/2015/03/24/ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%87%8D%E5%90%AF%E5%8D%A1%E6%AD%BB%E7%9A%84%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2015/03/24/ubuntu服务器启动过程中重启卡死的问题解决/</id>
    <published>2015-03-24T00:14:36.000Z</published>
    <updated>2015-03-24T00:15:36.040Z</updated>
    <content type="html"><![CDATA[<p>在grub默认参数当中添加</p>
<pre><code><span class="attribute">GRUB_RECORDFAIL_TIMEOUT</span>=<span class="string">0</span>
</code></pre><p>写于: 2014年07月23日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在grub默认参数当中添加</p>
<pre><code><span class="attribute">GRUB_RECORDFAIL_TIMEOUT</span>=<span class="string">0</span>
</code></pre><p>写于: 201]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[nginx开启目录浏览]]></title>
    <link href="http://yoursite.com/2015/03/24/nginx%E5%BC%80%E5%90%AF%E7%9B%AE%E5%BD%95%E6%B5%8F%E8%A7%88/"/>
    <id>http://yoursite.com/2015/03/24/nginx开启目录浏览/</id>
    <published>2015-03-24T00:04:52.000Z</published>
    <updated>2015-03-24T00:06:13.360Z</updated>
    <content type="html"><![CDATA[<p>使用nginx作为下载站点,开启目录浏览的功能<br>在/etc/nginx/sites-enabled/default中添加:</p>
<pre><code><span class="title">autoindex</span> <span class="built_in">on</span> ;
<span class="title">autoindex_exact_size</span> <span class="built_in">off</span>;
<span class="title">autoindex_localtime</span> <span class="built_in">on</span>;
</code></pre><p>说明:</p>
<p>第一个为目录浏览功能开始<br>第二个为不精确计算文件大小<br>第三个为取时间为服务器本地的时间</p>
<p>删除location相关的内容<br>修改完成重启nginx服务</p>
<p>写于: 2014年07月16日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>使用nginx作为下载站点,开启目录浏览的功能<br>在/etc/nginx/sites-enabled/default中添加:</p>
<pre><code><span class="title">autoindex</span> <span class="built_i]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu13.04修改默认启动内核]]></title>
    <link href="http://yoursite.com/2015/03/24/ubuntu13-04%E4%BF%AE%E6%94%B9%E9%BB%98%E8%AE%A4%E5%90%AF%E5%8A%A8%E5%86%85%E6%A0%B8/"/>
    <id>http://yoursite.com/2015/03/24/ubuntu13-04修改默认启动内核/</id>
    <published>2015-03-24T00:01:44.000Z</published>
    <updated>2015-03-24T00:04:02.594Z</updated>
    <content type="html"><![CDATA[<p>ubuntu下面的启动内核选项跟其他操作系统不一样,有个子菜单,比如我在默认的ubuntu13.04上安装了一个新的内核3.14.5,那么默认的第一项是3.14.5内核,第二项是一个子菜单,第二项里面的第一项是3.14.5,第二项是3.14.5 recovery 模式,第三项是3.8.0,第四项是3.8.0(recover)</p>
<p>那么应该修改</p>
<pre><code><span class="regexp">/boot/g</span>rub<span class="regexp">/grub.cfg</span>
</code></pre><p>中的</p>
<pre><code><span class="variable">GRUB_DEFAULT=</span><span class="number">0</span>为<span class="variable">GRUB_DEFAULT=</span><span class="string">"1&gt;2"</span>
</code></pre><p>然后:</p>
<pre><code><span class="keyword">update</span>-grub
</code></pre><p>重启即可</p>
<p>写于: 2014年07月11日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>ubuntu下面的启动内核选项跟其他操作系统不一样,有个子菜单,比如我在默认的ubuntu13.04上安装了一个新的内核3.14.5,那么默认的第一项是3.14.5内核,第二项是一个子菜单,第二项里面的第一项是3.14.5,第二项是3.14.5 recovery 模式,第三]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux域名解析引起登陆慢]]></title>
    <link href="http://yoursite.com/2015/03/24/linux%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90%E5%BC%95%E8%B5%B7%E7%99%BB%E9%99%86%E6%85%A2/"/>
    <id>http://yoursite.com/2015/03/24/linux域名解析引起登陆慢/</id>
    <published>2015-03-23T23:56:00.000Z</published>
    <updated>2015-03-24T00:00:21.428Z</updated>
    <content type="html"><![CDATA[<p>linux域名解析引起登陆慢的问题在于,ssh去登录这个台机器的时候,本机会去通过域名解析获取登录主机的主机名，所有一旦域名解析是无效的,需要等待较长时间</p>
<p>解决办法一:<br>将域名解析指到127.0.0.1</p>
<p>解决办法二:<br>修改配置文件 /etc/ssh/sshd_config </p>
<pre><code><span class="title">UseDNS</span> <span class="built_in">no</span>
</code></pre><p>然后重启ssh服务 </p>
<p>写于: 2014年07月10日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>linux域名解析引起登陆慢的问题在于,ssh去登录这个台机器的时候,本机会去通过域名解析获取登录主机的主机名，所有一旦域名解析是无效的,需要等待较长时间</p>
<p>解决办法一:<br>将域名解析指到127.0.0.1</p>
<p>解决办法二:<br>修改配置文件 /]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[重置ubuntu13.04 密码]]></title>
    <link href="http://yoursite.com/2015/03/24/%E9%87%8D%E7%BD%AEubuntu13-04-%E5%AF%86%E7%A0%81/"/>
    <id>http://yoursite.com/2015/03/24/重置ubuntu13-04-密码/</id>
    <published>2015-03-23T23:53:43.000Z</published>
    <updated>2015-03-23T23:55:23.981Z</updated>
    <content type="html"><![CDATA[<p>方法如下:</p>
<p>1) Restart Machine </p>
<p>2) HOLD Shift Button ( You will get message “GRUB Loading“)</p>
<p>3) Select the Kernel ( Don’t select Recovery Mode)</p>
<p>4) Press the e key to edit the entry</p>
<p>5) Select the line starting with the word “linux”</p>
<a id="more"></a>
<p>6) Append the init=/bin/bash to the end of the linux line.</p>
<p>7) Now Press F10 to boot with provided option.</p>
<p>Now You need to mount File System ( / ) into Read-Write Mode</p>
<p>8) mount -o remount,rw /</p>
<p>Now execute passwd command to Reset root password.</p>
<p>9) For root User passwd</p>
<p>Other User passwd <user-name></user-name></p>
<p>写于: 2014年06月25日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>方法如下:</p>
<p>1) Restart Machine </p>
<p>2) HOLD Shift Button ( You will get message “GRUB Loading“)</p>
<p>3) Select the Kernel ( Don’t select Recovery Mode)</p>
<p>4) Press the e key to edit the entry</p>
<p>5) Select the line starting with the word “linux”</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[xenserver中linux虚拟机修改启动顺序]]></title>
    <link href="http://yoursite.com/2015/03/24/xenserver%E4%B8%ADlinux%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%BF%AE%E6%94%B9%E5%90%AF%E5%8A%A8%E9%A1%BA%E5%BA%8F/"/>
    <id>http://yoursite.com/2015/03/24/xenserver中linux虚拟机修改启动顺序/</id>
    <published>2015-03-23T23:49:21.000Z</published>
    <updated>2015-03-23T23:53:08.009Z</updated>
    <content type="html"><![CDATA[<p>xenserver是思杰的一款类似于vmware ESXI的虚拟化平台,或者说虚拟化操作系统,上面可以安装许多虚拟机,但是当你装完linux虚拟机，你会发现一个问题,不能像windows vm那样直接通过xencenter的虚拟机属性去修改。</p>
<p>windows的启动属性,很容易修改,</p>
<p>而linux的启动属性,没有这些</p>
<p>下面我们介绍一些啊，怎么可以把linux的启动属性,通过命令行解决掉。</p>
<p>选择xenserver主机的console端,找到linux虚拟机的uuid。</p>
<p>执行:</p>
<pre><code>xe vm-list name-lable=<span class="function"><span class="title">xx</span><span class="params">(虚拟机名称)</span></span> 就会显示虚拟机的uuid
</code></pre><p>然后执行: </p>
<pre><code>xe vm-param-set uuid=<span class="function"><span class="title">xx</span><span class="params">(上面获取到的)</span></span> HVM-boot-policy=BIOS\ <span class="attribute">order</span>
xe vm-param-set uuid=<span class="function"><span class="title">xx</span><span class="params">(上面获取到的)</span></span> HVM-boot-params:<span class="attribute">order</span>=<span class="string">"dc"</span>
</code></pre><p>执行完,你就可以通过XenCenter打开Linux虚拟机的属性查看,和windows一样,可以修改启动顺序了</p>
<p>写于: 2014年06月19日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>xenserver是思杰的一款类似于vmware ESXI的虚拟化平台,或者说虚拟化操作系统,上面可以安装许多虚拟机,但是当你装完linux虚拟机，你会发现一个问题,不能像windows vm那样直接通过xencenter的虚拟机属性去修改。</p>
<p>windows的]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[fio的配置使用]]></title>
    <link href="http://yoursite.com/2015/03/24/fio%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2015/03/24/fio的配置使用/</id>
    <published>2015-03-23T23:45:26.000Z</published>
    <updated>2015-03-23T23:48:03.349Z</updated>
    <content type="html"><![CDATA[<p>将fio-2.1.10.tar.gz拷贝到linux服务器的/usr/src/下</p>
<p>解压源码包:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src</span><span class="comment"># tar xvf fio-2.1.10.tar.gz </span>
root<span class="variable">@grandocean</span><span class="symbol">:/usr/src</span><span class="comment"># cd fio-2.1.10/ </span>
</code></pre><p>安装依赖包:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src/fio-</span><span class="number">2.1</span>.<span class="number">10</span><span class="comment"># apt-get install pkg-config gtk+-2.0 libaio-dev </span>
</code></pre><p>开启gfio:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src/fio-</span><span class="number">2.1</span>.<span class="number">10</span><span class="comment"># ./configure --enable-gfio </span>
</code></pre><a id="more"></a>
<p>编译fio:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src/fio-</span><span class="number">2.1</span>.<span class="number">10</span><span class="comment"># make fio </span>
</code></pre><p>编译gfio:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src/fio-</span><span class="number">2.1</span>.<span class="number">10</span><span class="comment"># make gfio </span>
</code></pre><p>启动server模式:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src/fio-</span><span class="number">2.1</span>.<span class="number">10</span><span class="comment"># ./fio -S</span>
</code></pre><p>写于: 2014年06月12日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>将fio-2.1.10.tar.gz拷贝到linux服务器的/usr/src/下</p>
<p>解压源码包:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src</span><span class="comment"># tar xvf fio-2.1.10.tar.gz </span>
root<span class="variable">@grandocean</span><span class="symbol">:/usr/src</span><span class="comment"># cd fio-2.1.10/ </span>
</code></pre><p>安装依赖包:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src/fio-</span><span class="number">2.1</span>.<span class="number">10</span><span class="comment"># apt-get install pkg-config gtk+-2.0 libaio-dev </span>
</code></pre><p>开启gfio:</p>
<pre><code>root<span class="variable">@grandocean</span><span class="symbol">:/usr/src/fio-</span><span class="number">2.1</span>.<span class="number">10</span><span class="comment"># ./configure --enable-gfio </span>
</code></pre>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[持续运行一个命令，并且将结果输出到文本]]></title>
    <link href="http://yoursite.com/2015/03/24/%E6%8C%81%E7%BB%AD%E8%BF%90%E8%A1%8C%E4%B8%80%E4%B8%AA%E5%91%BD%E4%BB%A4%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%B0%86%E7%BB%93%E6%9E%9C%E8%BE%93%E5%87%BA%E5%88%B0%E6%96%87%E6%9C%AC/"/>
    <id>http://yoursite.com/2015/03/24/持续运行一个命令，并且将结果输出到文本/</id>
    <published>2015-03-23T23:43:09.000Z</published>
    <updated>2015-03-23T23:45:05.398Z</updated>
    <content type="html"><![CDATA[<pre><code><span class="shebang">#! /bin/sh</span>
<span class="keyword">while</span> [ <span class="number">2</span> &gt; <span class="number">1</span> ]
<span class="keyword">do</span>
    <span class="built_in">echo</span> `date` &gt;&gt; recode.txt
    df -h &gt;&gt; recode.txt
    sleep  <span class="number">5</span>
<span class="keyword">done</span>  
</code></pre><p>写于: 2014年06月12日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<pre><code><span class="shebang">#! /bin/sh</span>
<span class="keyword">while</span> [ <span class="number">2</span> &gt; <span class="numb]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[配置xenserver本地存储]]></title>
    <link href="http://yoursite.com/2015/03/24/%E9%85%8D%E7%BD%AExenserver%E6%9C%AC%E5%9C%B0%E5%AD%98%E5%82%A8/"/>
    <id>http://yoursite.com/2015/03/24/配置xenserver本地存储/</id>
    <published>2015-03-23T23:40:51.000Z</published>
    <updated>2015-03-23T23:43:54.361Z</updated>
    <content type="html"><![CDATA[<p>查询磁盘对应关系:</p>
<pre><code>[<span class="literal">root</span>@xenserver-eqtwbths ~]<span class="comment"># ll /dev/disk/by-id/</span>
total <span class="number">0</span>
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev81 -&gt; ../../sdb
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">14</span>:<span class="number">14</span> edd-int13_dev81-part1 -&gt; ../../sdb1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev82 -&gt; ../../sdc
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev83 -&gt; ../../sdd
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev83-part1 -&gt; ../../sdd1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D3PNHD -&gt; ../../sdc
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D3PPH8 -&gt; ../../sdd
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D3PPH8-part1 -&gt; ../../sdd1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGVJ -&gt; ../../sdb
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">14</span>:<span class="number">14</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGVJ-part1 -&gt; ../../sdb1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3 -&gt; ../../sda
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3-part1 -&gt; ../../sda1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3-part2 -&gt; ../../sda2
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3-part3 -&gt; ../../sda3
</code></pre><a id="more"></a>
<p>准备添加sdb1作为存储</p>
<pre><code>root@xenserver-eqtwbths ~]# xe sr-create <span class="class"><span class="keyword">type</span></span>=lvm content-<span class="class"><span class="keyword">type</span></span>=user device-config:device=/dev/disk/by-id/edd-int13_dev81-part1 name-label=<span class="string">"Local storage 2(sdb)"</span> 
</code></pre><p>2.XS删除本地存储连接 </p>
<p>列出pdb模块，找到对应存储的UUID </p>
<pre><code>xe pbd-<span class="type">list</span>  
</code></pre><p>卸载对应uuid的存储 </p>
<pre><code>xe pbd-unplug <span class="built_in">uuid</span>=“<span class="built_in">uuid</span> of <span class="constant">P</span>BD”  
</code></pre><p>列出存储的UUID，找到对应存储的UUID </p>
<pre><code>xe sr-<span class="type">list</span>  
</code></pre><p>删除本地存储连接 </p>
<pre><code>xe sr-destroy <span class="built_in">uuid</span>=“<span class="built_in">uuid</span> of <span class="constant">S</span>R ” 
</code></pre><p>写于: 2014年06月05日<br>更新于: 2015年03月24日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>查询磁盘对应关系:</p>
<pre><code>[<span class="literal">root</span>@xenserver-eqtwbths ~]<span class="comment"># ll /dev/disk/by-id/</span>
total <span class="number">0</span>
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev81 -&gt; ../../sdb
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">14</span>:<span class="number">14</span> edd-int13_dev81-part1 -&gt; ../../sdb1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev82 -&gt; ../../sdc
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev83 -&gt; ../../sdd
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> edd-int13_dev83-part1 -&gt; ../../sdd1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D3PNHD -&gt; ../../sdc
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D3PPH8 -&gt; ../../sdd
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D3PPH8-part1 -&gt; ../../sdd1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGVJ -&gt; ../../sdb
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">14</span>:<span class="number">14</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGVJ-part1 -&gt; ../../sdb1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span>  <span class="number">9</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3 -&gt; ../../sda
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3-part1 -&gt; ../../sda1
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3-part2 -&gt; ../../sda2
lrwxrwxrwx <span class="number">1</span> <span class="literal">root</span> <span class="literal">root</span> <span class="number">10</span> <span class="constant">Jun</span>  <span class="number">5</span> <span class="number">13</span>:<span class="number">24</span> scsi-<span class="constant">S</span>ATA_ST1000VX00<span class="number">0</span>-<span class="number">9</span>YW_S1D4AGX3-part3 -&gt; ../../sda3
</code></pre>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu无法关机]]></title>
    <link href="http://yoursite.com/2015/03/23/ubuntu%E6%97%A0%E6%B3%95%E5%85%B3%E6%9C%BA/"/>
    <id>http://yoursite.com/2015/03/23/ubuntu无法关机/</id>
    <published>2015-03-23T14:12:55.000Z</published>
    <updated>2015-03-23T23:44:15.109Z</updated>
    <content type="html"><![CDATA[<p>在/etc/default/halt 增加下面</p>
<pre><code><span class="attribute">INIT_HALT </span>=<span class="string"> POWEROFF</span>
</code></pre><a id="more"></a>
<hr>
<p>另一种方法:</p>
<p>I have the same problem and found a solution which worked out for me.</p>
<p>Type in terminal:</p>
<pre><code>sudo -i (<span class="built_in">to</span> <span class="built_in">get</span> <span class="operator">a</span> root <span class="built_in">shell</span>, sudo gedit is <span class="operator">not</span> recommended)
gedit /etc/default/grub
Find <span class="operator">the</span> <span class="built_in">line</span>: GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">"quiet splash"</span>
Change this <span class="built_in">to</span>: GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">"quiet splash acpi=force"</span>
Save <span class="operator">the</span> <span class="built_in">file</span> <span class="operator">and</span> <span class="built_in">close</span> <span class="operator">the</span> <span class="built_in">file</span>.
Finally, <span class="operator">in</span> terminal: update-grub
exit (<span class="built_in">to</span> <span class="function"><span class="keyword">end</span> <span class="title">the</span> <span class="title">root</span> <span class="title">shell</span>)</span>
</code></pre><p>写于: 2014年05月07日<br>更新于: 2015年03月23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在/etc/default/halt 增加下面</p>
<pre><code><span class="attribute">INIT_HALT </span>=<span class="string"> POWEROFF</span>
</code></pre>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux中KVM桥接网卡br0]]></title>
    <link href="http://yoursite.com/2015/03/23/linux%E4%B8%ADKVM%E6%A1%A5%E6%8E%A5%E7%BD%91%E5%8D%A1br0/"/>
    <id>http://yoursite.com/2015/03/23/linux中KVM桥接网卡br0/</id>
    <published>2015-03-23T14:05:59.000Z</published>
    <updated>2015-03-23T14:09:32.956Z</updated>
    <content type="html"><![CDATA[<p>在centos虚拟化当中需要增加一个桥接网卡,然后将虚拟化当中的机器的网卡桥接到桥接网卡,下面将描述设置方法:</p>
<p>查看现有网卡</p>
<pre><code>[root@zb ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-eth0</span>
<span class="constant">DEVICE</span>=eth0
<span class="constant">HWADDR</span>=70:71:BC:1F:E4:86
<span class="constant">TYPE</span>=Ethernet
<span class="constant">UUID</span>=0213211a-d451-4944-881c-e7475b8bee34
<span class="constant">ONBOOT</span>=yes
<span class="constant">NM_CONTROLLED</span>=yes
<span class="constant">BOOTPROTO</span>=static
<span class="constant">IPADDR</span>=192.168.7.107
<span class="constant">NETMASK</span>=255.255.0.0
<span class="constant">GATEWAY</span>=192.168.1.1
</code></pre><p>将网卡信息copy一份到br0再进行修改</p>
<a id="more"></a>
<p>修改eth0的信息为:</p>
<pre><code><span class="variable">DEVICE=</span>eth0
<span class="variable">HWADDR=</span><span class="number">70</span>:<span class="number">71</span>:BC:<span class="number">1</span>F:E4:<span class="number">86</span>
<span class="variable">TYPE=</span>Ethernet
<span class="variable">ONBOOT=</span>yes
<span class="variable">NM_CONTROLLED=</span>yes
<span class="variable">BOOTPROTO=</span>static
<span class="variable">BRIDGE=</span>br0     <span class="comment">#新增加了这一句,重要</span>
修改br0的信息为：
<span class="variable">DEVICE=</span>br0     <span class="comment">#更改eth0为br0</span>
<span class="variable">HWADDR=</span><span class="number">70</span>:<span class="number">71</span>:BC:<span class="number">1</span>F:E4:<span class="number">86</span>
<span class="variable">TYPE=</span>Bridge       <span class="comment">#修改类型为bridge</span>
<span class="variable">ONBOOT=</span>yes
<span class="variable">BOOTPROTO=</span>static
<span class="variable">IPADDR=</span><span class="number">192.168</span>.<span class="number">7.107</span>
<span class="variable">NETMASK=</span><span class="number">255.255</span>.<span class="number">0.0</span>
<span class="variable">GATEWAY=</span><span class="number">192.168</span>.<span class="number">1.1</span>
</code></pre><p>修改完成后,eth0实际是没有ip的,br0为当前主机的ip了</p>
<p>ubuntu下的配置方式</p>
<pre><code><span class="title">auto</span> lo
iface lo inet loopback
auto br0
iface br0 inet static
bridge_ports eth0
bridge_stp <span class="built_in">off</span>
bridge_maxwait <span class="number">0</span>
bridge_fd <span class="number">0</span>
address <span class="number">192.168.5.108</span>
netmask <span class="number">255.255.0.0</span>
gateway <span class="number">192.168.1.1</span>
dns-nameservers <span class="number">192.168.1.1</span>
</code></pre><p>配置完成后:<br><img src="http://7xi6lo.com1.z0.glb.clouddn.com/桥接网卡br0.jpg" alt=""></p>
<p>写于: 2013年12月24日<br>更新于: 2015年03月23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在centos虚拟化当中需要增加一个桥接网卡,然后将虚拟化当中的机器的网卡桥接到桥接网卡,下面将描述设置方法:</p>
<p>查看现有网卡</p>
<pre><code>[root@zb ~]<span class="comment"># vim /etc/sysconfig/network-scripts/ifcfg-eth0</span>
<span class="constant">DEVICE</span>=eth0
<span class="constant">HWADDR</span>=70:71:BC:1F:E4:86
<span class="constant">TYPE</span>=Ethernet
<span class="constant">UUID</span>=0213211a-d451-4944-881c-e7475b8bee34
<span class="constant">ONBOOT</span>=yes
<span class="constant">NM_CONTROLLED</span>=yes
<span class="constant">BOOTPROTO</span>=static
<span class="constant">IPADDR</span>=192.168.7.107
<span class="constant">NETMASK</span>=255.255.0.0
<span class="constant">GATEWAY</span>=192.168.1.1
</code></pre><p>将网卡信息copy一份到br0再进行修改</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu掉电出现检查文件系统的问题]]></title>
    <link href="http://yoursite.com/2015/03/23/ubuntu%E6%8E%89%E7%94%B5%E5%87%BA%E7%8E%B0%E6%A3%80%E6%9F%A5%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2015/03/23/ubuntu掉电出现检查文件系统的问题/</id>
    <published>2015-03-23T14:04:00.000Z</published>
    <updated>2015-03-23T14:05:00.112Z</updated>
    <content type="html"><![CDATA[<p>修改:</p>
<pre><code>/etc/<span class="reserved">default</span>/rcS 
FSCKFIX=<span class="literal">no</span> 为 FSCKFIX=<span class="literal">yes</span>
</code></pre><p>出现这个情况的原因是硬件时钟偏移了<br>显示上次挂载根目录在未来时间。</p>
<p>写于: 2013年11月28日<br>更新于: 2015年03月23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>修改:</p>
<pre><code>/etc/<span class="reserved">default</span>/rcS 
FSCKFIX=<span class="literal">no</span> 为 FSCKFIX=<span class="literal]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[ssh配好无密码登录（RSA公钥）后，还要密码登录的问题的解决办法]]></title>
    <link href="http://yoursite.com/2015/03/23/ssh%E9%85%8D%E5%A5%BD%E6%97%A0%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%EF%BC%88RSA%E5%85%AC%E9%92%A5%EF%BC%89%E5%90%8E%EF%BC%8C%E8%BF%98%E8%A6%81%E5%AF%86%E7%A0%81%E7%99%BB%E5%BD%95%E7%9A%84%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2015/03/23/ssh配好无密码登录（RSA公钥）后，还要密码登录的问题的解决办法/</id>
    <published>2015-03-23T05:01:44.000Z</published>
    <updated>2015-03-23T06:02:55.074Z</updated>
    <content type="html"><![CDATA[<p>首先删除 /root/.ssh目录<br>然后ssh-keygen 生成新的认证目录<br>然后检查能否免密码登陆<br>如果还不能可能是/root/目录的权限不对了 可能被异常改到777了<br>做操作 </p>
<pre><code>chmod <span class="number">650</span> <span class="regexp">/root/</span>
</code></pre><p>然后再尝试看能不能免登陆访问</p>
<p>写于: 2013年11月28日<br>更新于: 2015年03日23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先删除 /root/.ssh目录<br>然后ssh-keygen 生成新的认证目录<br>然后检查能否免密码登陆<br>如果还不能可能是/root/目录的权限不对了 可能被异常改到777了<br>做操作 </p>
<pre><code>chmod <span class=]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[ubuntu服务器dns重启失效问题]]></title>
    <link href="http://yoursite.com/2015/03/23/ubuntu%E6%9C%8D%E5%8A%A1%E5%99%A8dns%E9%87%8D%E5%90%AF%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2015/03/23/ubuntu服务器dns重启失效问题/</id>
    <published>2015-03-23T00:05:19.000Z</published>
    <updated>2015-03-23T00:09:10.719Z</updated>
    <content type="html"><![CDATA[<h3 id="方法一_通过/etc/network/interfaces,在它的最后增加一句:">方法一 通过/etc/network/interfaces,在它的最后增加一句:</h3><pre><code>dns-nameservers 8.8.8.8
</code></pre><p>8.8.8.8是Google提供的DNS服务，这里只是举一个例子,你也可以改成电信运营商的DNS。重启后DNS就生效了，这时候再看/etc/resolv.conf,最下面就多了一行:</p>
<pre><code># Dynamic resolv.<span class="keyword">conf</span>(5) <span class="keyword">file</span> <span class="keyword">for</span> glibc resolver(3) generated <span class="keyword">by</span> resolvconf(8)
#     <span class="keyword">DO</span> NOT <span class="keyword">EDIT</span> THIS <span class="keyword">FILE</span> <span class="keyword">BY</span> HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 8.8.8.8
</code></pre><a id="more"></a>
<h3 id="方法二_通过修改:">方法二 通过修改:</h3><p>/etc/resolvconf/resolv.conf.d/base,这个文件默认是空的:<br>在里面插入:</p>
<pre><code><span class="title">nameserver</span> <span class="number">8.8.8.8</span>
nameserver <span class="number">8.8.4.4</span>
</code></pre><p>如果有多个DNS就一行一个<br>修改好保存,然后执行:</p>
<pre><code><span class="title">resolvconf</span> -u
</code></pre><p>再看/etc/resolv.conf,最下面就多了2行:<br>cat /etc/resolv.conf</p>
<pre><code># Dynamic resolv.<span class="keyword">conf</span>(5) <span class="keyword">file</span> <span class="keyword">for</span> glibc resolver(3) generated <span class="keyword">by</span> resolvconf(8)
#     <span class="keyword">DO</span> NOT <span class="keyword">EDIT</span> THIS <span class="keyword">FILE</span> <span class="keyword">BY</span> HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 8.8.8.8
nameserver 8.8.4.4
</code></pre><p>可以看到我们的设置已经加上了,然后再ping一个域名,当时就可以解析了,无需重启。<br>附:CentOS下修改DNS则容易的多了,直接修改/etc/resolv.conf,内容是:<br>nameserver 8.8.8.8<br>nameserver 8.8.4.4<br>保存就生效了,重启也没问题。<br>或者在网卡配置文件当中添加:</p>
<pre><code><span class="attribute">DNS1</span>=<span class="string">8.8.8.8</span>
</code></pre><p>写于: 2013年11月26日<br>更新于: 2015年03月23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="方法一_通过/etc/network/interfaces,在它的最后增加一句:">方法一 通过/etc/network/interfaces,在它的最后增加一句:</h3><pre><code>dns-nameservers 8.8.8.8
</code></pre><p>8.8.8.8是Google提供的DNS服务，这里只是举一个例子,你也可以改成电信运营商的DNS。重启后DNS就生效了，这时候再看/etc/resolv.conf,最下面就多了一行:</p>
<pre><code># Dynamic resolv.<span class="keyword">conf</span>(5) <span class="keyword">file</span> <span class="keyword">for</span> glibc resolver(3) generated <span class="keyword">by</span> resolvconf(8)
#     <span class="keyword">DO</span> NOT <span class="keyword">EDIT</span> THIS <span class="keyword">FILE</span> <span class="keyword">BY</span> HAND -- YOUR CHANGES WILL BE OVERWRITTEN
nameserver 8.8.8.8
</code></pre>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[编译一个Centos6.4下可用的内核rpm升级包-3.8.13内核rpm包]]></title>
    <link href="http://yoursite.com/2015/03/23/%E7%BC%96%E8%AF%91%E4%B8%80%E4%B8%AACentos6-4%E4%B8%8B%E5%8F%AF%E7%94%A8%E7%9A%84%E5%86%85%E6%A0%B8rpm%E5%8D%87%E7%BA%A7%E5%8C%85-3-8-13%E5%86%85%E6%A0%B8rpm%E5%8C%85/"/>
    <id>http://yoursite.com/2015/03/23/编译一个Centos6-4下可用的内核rpm升级包-3-8-13内核rpm包/</id>
    <published>2015-03-22T23:59:15.000Z</published>
    <updated>2015-03-23T00:04:41.901Z</updated>
    <content type="html"><![CDATA[<p>在Centos6.4下进行内核升级,采用内核源码的升级方式比较简单，但是需要升级的机器多的情况下进行内核升级就比较麻烦,并且编译内核的速度依赖于机器的性能,一般需要20分钟,而通过rpm内核包的方式进行安装,就比较快,一般在几分钟之内就可以完成内核的安装,本文档以3.8.13内核源码为例子进行的操作。<br>  根据网上的指导教程编译的rpm包，编译完成后只会生成如下两个rpm包:</p>
<ul>
<li>kernel-3.8.13-1.x86_64.rpm</li>
<li>kernel-headers-3.8.13-1.x86_64.rpm</li>
</ul>
<p>而实际进行内核升级的时候还需要kernel-firmwsare-3.8.13-1.x86_64.rpm这个包,这个包是包含内核固件相关文件的,而在进行rpm打包的时候,这个包会内嵌到kernel-3.8.13-1.x86_64.rpm这个包当中去,而安装的时候系统没有找到这个包，进行升级的时候就会报错。<br>所以需要对内核源码编译文件进行一定的修改，这个地方需要修改的文件为linux-3.8.13/scripts/package/mkspec路径下的这个文件,具体修改如下(新版内核解决了这个问题,可以不需要修改,根据生成包的情况来看是否修改):</p>
<a id="more"></a>
<h4 id="加入kernel-devel支持需要修改">加入kernel-devel支持需要修改</h4><pre><code>scripts/package/mkspec |   <span class="number">26</span> ++++++++++++++++++++++++++
 <span class="number">1</span> <span class="keyword">file</span> changed, <span class="number">26</span> insertions(+)
diff --git <span class="keyword">a</span>/scripts/package/mkspec <span class="keyword">b</span>/scripts/package/mkspec
<span class="built_in">index</span> <span class="number">514</span>aeb2..<span class="number">65131</span>df <span class="number">100755</span>
--- <span class="keyword">a</span>/scripts/package/mkspec
+++ <span class="keyword">b</span>/scripts/package/mkspec
@@ -<span class="number">59</span>,<span class="number">6</span> +<span class="number">59</span>,<span class="number">14</span> @@ <span class="keyword">echo</span> <span class="string">"header files define structures and constants that are needed for"</span>
 <span class="keyword">echo</span> <span class="string">"building most standard programs and are also needed for rebuilding the"</span>
 <span class="keyword">echo</span> <span class="string">"glibc package."</span>
 <span class="keyword">echo</span> <span class="string">""</span>
+<span class="keyword">echo</span> <span class="string">"%package devel"</span>
+<span class="keyword">echo</span> <span class="string">"Summary: Development package for building kernel modules to match the $__KERNELRELEASE kernel"</span>
+<span class="keyword">echo</span> <span class="string">"Group: System Environment/Kernel"</span>
+<span class="keyword">echo</span> <span class="string">"AutoReqProv: no"</span>
+<span class="keyword">echo</span> <span class="string">"%description -n kernel-devel"</span>
+<span class="keyword">echo</span> <span class="string">"This package provides kernel headers and makefiles sufficient to build modules"</span>
+<span class="keyword">echo</span> <span class="string">"against the $__KERNELRELEASE kernel package."</span>
+<span class="keyword">echo</span> <span class="string">""</span>

 <span class="keyword">if</span> ! $PREBUILT; then
 <span class="keyword">echo</span> <span class="string">"%prep"</span>
@@ -<span class="number">109</span>,<span class="number">6</span> +<span class="number">117</span>,<span class="number">11</span> @@ <span class="keyword">echo</span> <span class="string">'mv vmlinux.bz2 $RPM_BUILD_ROOT'</span><span class="string">"/boot/vmlinux-$KERNELRELEASE.bz2"</span>
 <span class="keyword">echo</span> <span class="string">'mv vmlinux.orig vmlinux'</span>
 <span class="keyword">echo</span> <span class="string">"%endif"</span>

+<span class="keyword">echo</span> <span class="string">'rm -rf $RPM_BUILD_ROOT'</span><span class="string">"/lib/modules/$KERNELRELEASE/{build,source}"</span>
+<span class="keyword">echo</span> <span class="string">"mkdir -p "</span><span class="string">'$RPM_BUILD_ROOT'</span><span class="string">"/usr/src/kernels/$KERNELRELEASE"</span>
+<span class="keyword">echo</span> <span class="string">"EXCLUDES=\"--exclude-vcs --exclude .tmp_versions --exclude=*vmlinux* --exclude=*.o --exclude=*.ko --exclude=*.cmd --exclude=Documentation --exclude=firmware --exclude .config.old --exclude .missing-syscalls.d\""</span>
+<span class="keyword">echo</span> <span class="string">"tar "</span><span class="string">'$EXCLUDES'</span><span class="string">" -cf- . | (cd "</span><span class="string">'$RPM_BUILD_ROOT'</span><span class="string">"/usr/src/kernels/$KERNELRELEASE;tar xvf -)"</span>
+
 <span class="keyword">echo</span> <span class="string">""</span>
 <span class="keyword">echo</span> <span class="string">"%clean"</span>
 <span class="keyword">echo</span> <span class="string">'rm -rf $RPM_BUILD_ROOT'</span>
@@ -<span class="number">122</span>,<span class="number">6</span> +<span class="number">135</span>,<span class="number">15</span> @@ <span class="keyword">echo</span> <span class="string">"/sbin/installkernel $KERNELRELEASE /boot/vmlinuz-$KERNELRELEASE-rpm /boot/
</span> <span class="keyword">echo</span> <span class="string">"rm -f /boot/vmlinuz-$KERNELRELEASE-rpm /boot/System.map-$KERNELRELEASE-rpm"</span>
 <span class="keyword">echo</span> <span class="string">"fi"</span>
 <span class="keyword">echo</span> <span class="string">""</span>
+<span class="keyword">echo</span> <span class="string">"%post devel"</span>
+<span class="keyword">echo</span> <span class="string">"cd /lib/modules/$KERNELRELEASE"</span>
+<span class="keyword">echo</span> <span class="string">"ln -sf /usr/src/kernels/$KERNELRELEASE build"</span>
+<span class="keyword">echo</span> <span class="string">"ln -sf /usr/src/kernels/$KERNELRELEASE source"</span>
+<span class="keyword">echo</span> <span class="string">""</span>
+<span class="keyword">echo</span> <span class="string">"%postun devel"</span>
+<span class="keyword">echo</span> <span class="string">"cd /lib/modules/$KERNELRELEASE"</span>
+<span class="keyword">echo</span> <span class="string">"rm -f build source"</span>
+<span class="keyword">echo</span> <span class="string">""</span>
 <span class="keyword">echo</span> <span class="string">"%files"</span>
 <span class="keyword">echo</span> <span class="string">'%defattr (-, root, root)'</span>
 <span class="keyword">echo</span> <span class="string">"%dir /lib/modules"</span>
@@ -<span class="number">133</span>,<span class="number">3</span> +<span class="number">155</span>,<span class="number">7</span> @@ <span class="keyword">echo</span> <span class="string">"%files headers"</span>
 <span class="keyword">echo</span> <span class="string">'%defattr (-, root, root)'</span>
 <span class="keyword">echo</span> <span class="string">"/usr/include"</span>
 <span class="keyword">echo</span> <span class="string">""</span>
+<span class="keyword">echo</span> <span class="string">"%files devel"</span>
+<span class="keyword">echo</span> <span class="string">'%defattr (-, root, root)'</span>
+<span class="keyword">echo</span> <span class="string">"/usr/src/kernels/$KERNELRELEASE"</span>
+<span class="keyword">echo</span> <span class="string">""</span>
</code></pre><h4 id="加入kernel-firmware支持需要修改：">加入kernel-firmware支持需要修改：</h4><pre><code><span class="number">1</span> files changed, <span class="number">11</span> insertions(+), <span class="number">1</span> deletions(-) 

diff --git a/scripts/package/mkspec b/scripts/package/mkspec 
index b20bdac..<span class="number">35</span>e68d1 <span class="number">100755</span> 
--- a/scripts/package/mkspec 
+++ b/scripts/package/mkspec 
@@ -<span class="number">68</span>,<span class="number">6</span> +<span class="number">68</span>,<span class="number">13</span> @@ <span class="built_in">echo</span> <span class="string">"between the Linux kernel and userspace libraries and programs. The"</span> 
<span class="built_in">echo</span> <span class="string">"header files define structures and constants that are needed for"</span> 
<span class="built_in">echo</span> <span class="string">"building most standard programs and are also needed for rebuilding the"</span> 
<span class="built_in">echo</span> <span class="string">"glibc package."</span> 
+<span class="built_in">echo</span> <span class="string">""</span> 
+<span class="built_in">echo</span> <span class="string">"%package firmware"</span> 
+<span class="built_in">echo</span> <span class="string">"Summary: Set of firmware images in the kernel tree"</span> 
+<span class="built_in">echo</span> <span class="string">"Group: Development/System"</span> 
+<span class="built_in">echo</span> <span class="string">"%description firmware"</span> 
+<span class="built_in">echo</span> <span class="string">"Firmware images in the kernel tree provided for backward compability"</span> 
+<span class="built_in">echo</span> <span class="string">""</span>

<span class="keyword">if</span> ! <span class="variable">$PREBUILT</span>; <span class="keyword">then</span> 
<span class="built_in">echo</span> <span class="string">"%prep"</span> 
@@ -<span class="number">137</span>,<span class="number">7</span> +<span class="number">144</span>,<span class="number">6</span> @@ <span class="built_in">echo</span> <span class="string">"%files"</span> 
<span class="built_in">echo</span> <span class="string">'%defattr (-, root, root)'</span> 
<span class="built_in">echo</span> <span class="string">"%dir /lib/modules"</span> 
<span class="built_in">echo</span> <span class="string">"/lib/modules/<span class="variable">$KERNELRELEASE</span>"</span> 
-echo <span class="string">"/lib/firmware"</span> 
<span class="built_in">echo</span> <span class="string">"/boot/*"</span> 
<span class="built_in">echo</span> <span class="string">""</span> 
<span class="built_in">echo</span> <span class="string">"%files devel"</span> 
@@ -<span class="number">148</span>,<span class="number">3</span> +<span class="number">154</span>,<span class="number">7</span> @@ <span class="built_in">echo</span> <span class="string">"%files headers"</span> 
<span class="built_in">echo</span> <span class="string">'%defattr (-, root, root)'</span> 
<span class="built_in">echo</span> <span class="string">"/usr/include"</span> 
<span class="built_in">echo</span> <span class="string">""</span> 
+<span class="built_in">echo</span> <span class="string">"%files firmware"</span> 
+<span class="built_in">echo</span> <span class="string">'%defattr (-, root, root)'</span> 
+<span class="built_in">echo</span> <span class="string">"/lib/firmware"</span> 
+<span class="built_in">echo</span> <span class="string">""</span>
</code></pre><p>修改完上面的然后在根目录进行 make rpm 即可生成相应的内核rpm包<br>这个是修改完的内核mkspec文件，可以直接使用<br><a href="https://www.dropbox.com/s/nsvyf607t91k2mq/mkspec" target="_blank" rel="external">https://www.dropbox.com/s/nsvyf607t91k2mq/mkspec</a><br>安装前需要安装依赖包</p>
<p> yum install -y gcc make  bison ncurses-devel rpm-build</p>
<p>写于: 2013年09月18日<br>更新于: 2015年03月23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在Centos6.4下进行内核升级,采用内核源码的升级方式比较简单，但是需要升级的机器多的情况下进行内核升级就比较麻烦,并且编译内核的速度依赖于机器的性能,一般需要20分钟,而通过rpm内核包的方式进行安装,就比较快,一般在几分钟之内就可以完成内核的安装,本文档以3.8.13内核源码为例子进行的操作。<br>  根据网上的指导教程编译的rpm包，编译完成后只会生成如下两个rpm包:</p>
<ul>
<li>kernel-3.8.13-1.x86_64.rpm</li>
<li>kernel-headers-3.8.13-1.x86_64.rpm</li>
</ul>
<p>而实际进行内核升级的时候还需要kernel-firmwsare-3.8.13-1.x86_64.rpm这个包,这个包是包含内核固件相关文件的,而在进行rpm打包的时候,这个包会内嵌到kernel-3.8.13-1.x86_64.rpm这个包当中去,而安装的时候系统没有找到这个包，进行升级的时候就会报错。<br>所以需要对内核源码编译文件进行一定的修改，这个地方需要修改的文件为linux-3.8.13/scripts/package/mkspec路径下的这个文件,具体修改如下(新版内核解决了这个问题,可以不需要修改,根据生成包的情况来看是否修改):</p>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[expect循环的写法]]></title>
    <link href="http://yoursite.com/2015/03/23/expect%E5%BE%AA%E7%8E%AF%E7%9A%84%E5%86%99%E6%B3%95/"/>
    <id>http://yoursite.com/2015/03/23/expect循环的写法/</id>
    <published>2015-03-22T23:55:53.000Z</published>
    <updated>2015-03-22T23:57:14.628Z</updated>
    <content type="html"><![CDATA[<p>脚本:</p>
<pre><code><span class="shebang">#!/usr/bin/expect</span>
spawn sensors-detect
<span class="keyword">for</span> {set i <span class="number">0</span>} {$i&lt;=<span class="number">10</span>} {incr i} {
expect <span class="string">":"</span>
send <span class="string">"\n"</span>
}
interact
</code></pre><p>解释:</p>
<p>spawn是启动命令<br>for为循环的写法<br>interact为退出<br>这个脚本目的是在一次运行过程中不断模拟用户的enter操作</p>
<p>写于:2013年08月12日<br>更新于: 2015年03月23日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>脚本:</p>
<pre><code><span class="shebang">#!/usr/bin/expect</span>
spawn sensors-detect
<span class="keyword">for</span> {set i <span clas]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux系统启动的时候用脚本生成ssh密钥对（免输入enter）]]></title>
    <link href="http://yoursite.com/2015/03/22/linux%E7%B3%BB%E7%BB%9F%E5%90%AF%E5%8A%A8%E7%9A%84%E6%97%B6%E5%80%99%E7%94%A8%E8%84%9A%E6%9C%AC%E7%94%9F%E6%88%90ssh%E5%AF%86%E9%92%A5%E5%AF%B9%EF%BC%88%E5%85%8D%E8%BE%93%E5%85%A5enter%EF%BC%89/"/>
    <id>http://yoursite.com/2015/03/22/linux系统启动的时候用脚本生成ssh密钥对（免输入enter）/</id>
    <published>2015-03-22T15:07:52.000Z</published>
    <updated>2015-03-22T15:10:04.943Z</updated>
    <content type="html"><![CDATA[<p>默认执行ssh-keygen的时候会需要连续输入enter,脚本里面不能有交互,所以去掉enter的操作,脚本如下,脚本执行完成以后的效果是自己对自己免登陆,需要免登陆其他服务器就把自己本机的id_rsa.pub拷贝到其他机器的authorized_keys当中就可以了</p>
<pre><code><span class="shebang">#! /bin/sh</span>
ssh-keygen -t rsa <span class="operator">-f</span> /root/.ssh/id_rsa -q -N <span class="string">""</span>
cat /root/.ssh/id_rsa.pub &gt;&gt; /root/.ssh/authorized_keys
</code></pre><p>写于: 2013年08月07日<br>更新于: 2015年03月22日</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>默认执行ssh-keygen的时候会需要连续输入enter,脚本里面不能有交互,所以去掉enter的操作,脚本如下,脚本执行完成以后的效果是自己对自己免登陆,需要免登陆其他服务器就把自己本机的id_rsa.pub拷贝到其他机器的authorized_keys当中就可以了</]]>
    </summary>
    
  </entry>
  
</feed>